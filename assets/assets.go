// Code generated by go-bindata.
// sources:
// dist/velox.min.js
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _distVeloxMinJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x3a\x6b\x53\xe3\xc6\x96\xdf\xf3\x2b\xe4\xae\x94\x4b\xba\xb4\x85\x99\x24\x77\x77\xad\x69\x58\xc2\x38\x09\x29\x82\x67\x81\xb9\xc9\x16\x43\x18\x61\x37\x58\x19\xd1\xd2\x76\xb7\x61\xbc\x58\xf9\xed\x7b\x4e\x3f\xf4\xb0\x0d\x33\xb7\x36\x55\xf7\x8b\x2d\xf5\xe3\xbc\x5f\x7d\x5a\xbb\xbb\xc1\x03\xcf\x8b\x4f\xc1\x20\x78\x18\xc6\xaf\xe2\x6f\xe0\x61\xae\x75\xa9\x46\xbb\xbb\x77\x99\x9e\x2f\x6e\xe2\x69\x71\xbf\xfb\x47\x99\xe5\x79\x21\xd3\x5d\xb3\xf8\x2b\xd8\xf5\x73\x9a\xdd\xf3\xe0\xad\x1d\x0e\x5e\xcf\xf8\xc3\x7f\xfa\x45\xb8\x63\x1f\xe0\xfc\x72\x7c\x11\x1c\x15\xe5\x52\x66\x77\x73\x1d\xbc\x1a\xee\xfd\xfd\xab\xde\xed\x42\x4c\x75\x56\x88\x30\x7a\x6a\x9e\x75\xf4\x94\xdd\x86\xbd\x90\x8c\x1f\xb8\xd0\xe7\xc5\x42\x4e\x39\xc9\x44\xa0\xa3\xe8\xe9\x21\x95\x01\x67\xbb\xbf\x87\xef\xd5\xea\xfd\x62\x38\x3c\x1c\x46\x3b\xab\xf6\xcb\xd7\xbb\x77\x54\xb0\x36\x2c\xff\x1c\x58\xc8\xf1\x75\x59\xe4\xf9\x05\x90\x2b\x99\xe2\x1a\x1f\x8a\x85\x0e\x5b\x94\x14\xf1\x34\xcd\xf3\x30\x8b\x2a\xaa\xa3\xaa\xde\x5e\xc0\x94\x96\x4b\xa4\x2d\x8b\x25\x4f\x67\xcb\x73\x9d\x6a\xce\x58\x16\x1f\x9d\x4c\xce\xc7\x6f\x22\xc9\xf5\x42\x8a\x04\x69\xd4\x4c\xf0\xc7\xe0\xb7\x5f\x4e\x7e\x02\xe9\x9d\xf1\xff\x59\x70\xa5\x13\x1d\x17\x25\x17\x21\xf9\x71\x7c\x41\x68\x16\xbf\x3b\x3b\xa1\xbd\x61\x44\x75\x0c\x74\xb8\x35\x3f\x01\x5c\x2e\x43\x72\x38\x9d\xf2\x52\x13\x4a\x34\xff\xa4\x77\x39\x0a\x62\xa0\x34\x60\xbd\x27\xdb\x37\x1c\xa5\xd3\x39\x1f\x1c\x15\x42\xcb\x22\x87\x7d\xa2\x18\x4c\x71\xe8\x99\xe5\xbf\x0d\xdc\x00\x9f\x0d\x7e\x05\xc5\xc2\x8e\x2e\xb1\xb0\x4f\x2c\xf2\xbc\xc7\x54\xbf\xbf\x0d\xc0\x49\xaa\xf4\xc0\x28\x68\x70\xfc\x86\x50\x15\xd1\x39\x23\x04\x70\x69\x2b\x50\xf6\x1d\xff\x16\xde\x0a\x61\x24\xa5\x50\x52\xd3\x79\x2a\xee\x38\x6b\x49\x1a\x44\xf9\x0d\x63\x7a\x9e\xa9\x96\x40\x57\xab\x6f\x37\xc6\xfa\xfd\x57\xc3\xa1\x1b\x45\x58\x0b\x85\x9a\x5c\x53\xc2\xe4\xf4\x74\x7c\x74\x71\x7c\xfa\x63\xbf\xdf\xd5\x50\x16\x4f\xde\x8e\x4f\x41\xe2\xb3\x4c\x95\xa9\x9e\xce\x0d\xdd\x21\x41\x6d\x10\xfa\xa4\x97\x25\x1f\xd9\x97\x2a\x8a\x9c\xfa\x08\x49\x50\xd9\xda\x53\xa2\xca\x42\x28\x7e\x01\xda\x58\xad\x08\xa9\xa6\x08\x26\x2c\xa2\xa7\x0a\x97\x4f\x19\x88\x68\x71\x03\x0a\x0a\xe7\x71\xce\xc5\x9d\x9e\x47\xb1\x2a\xf3\x0c\x90\xbc\x17\x20\xca\x92\x91\x7b\xae\x54\x7a\xc7\x09\xcd\xd9\xe5\x15\x5d\xb0\x21\xbd\x45\x24\xb7\x05\xec\x61\x3a\x59\xbc\x9e\xba\x9d\xc9\x62\x67\x27\x02\xc9\xdc\xb2\xe9\xe5\xe2\x0a\x50\x97\x79\x3a\xe5\x21\xa7\x04\x00\x81\x10\x6e\xe3\x4c\xcc\xf8\xa7\xc9\x6d\x48\x8c\x5d\x90\x28\x2a\x61\xd0\xaf\xb3\xc6\x32\x3a\x78\xaf\xfe\xb6\x8b\x5b\x12\x9e\x2b\x1e\x00\xbc\xee\x56\xb0\x55\xb9\x84\xad\xe6\x9f\x95\xa9\x54\xfc\x18\x64\xd2\x82\x63\x66\x1a\x38\x11\xcd\xd4\x69\x7a\x1a\x9a\xe1\x68\xb5\x0a\x53\x66\x1f\x9f\x41\x30\x4b\x75\x0a\xbb\xf2\xb8\x5c\xa8\x79\x1b\x2e\x4e\xb4\xc0\x3e\xb3\x3d\x9b\x8d\x60\x52\xb5\x19\x83\xa1\xcf\x71\x95\xcd\xcc\x26\xb4\xdc\x7a\x05\x21\xb0\xa4\xdf\xcf\xbd\x62\x4c\x0c\x99\x19\xff\x94\x61\x1e\xff\x51\x64\xc2\x69\x29\x8b\x17\x32\x07\x53\x4e\xd6\x2d\xa5\xa4\xb3\xc8\xea\xad\xa5\xc8\x6a\x9b\x99\x8a\x30\x8d\x2a\x8b\xb9\x35\xde\x6b\x82\x04\xd8\xe6\xe6\xbe\x83\x75\x7b\x6d\x6c\x79\xd3\x6a\xb9\x94\x85\xac\xcd\xd6\xbe\x55\xe0\xad\x80\x39\x1a\x0d\x9f\xa1\x09\x63\x19\x78\xb1\x98\x85\x11\xdd\x1e\xf5\x74\x9c\xde\x14\x52\x87\x66\xa5\x73\x62\x14\xc9\xf5\xa7\xb9\x64\xba\x31\xf8\x2f\xa2\x87\x1a\x25\x17\xb1\x93\x55\x15\x55\xc6\x4f\x32\x43\x1c\x4d\xd9\x77\xc3\x21\xb5\x6a\x32\x61\x23\xc1\x78\x8f\x8e\x05\x1e\x94\x89\x3b\xd2\x63\x08\xac\xb8\x85\x90\xaf\xe7\xb2\x78\x0c\x50\x59\xe7\x4b\xa1\xd3\x4f\x63\x84\x1f\x92\xd3\x42\x07\x5c\x14\x8b\xbb\x79\x90\xca\xbb\xc5\x3d\x50\xa2\xc0\x2a\x0c\xef\x10\x57\x99\xa6\x6b\x62\xb0\x62\x69\xc9\xd5\xbc\xb7\x72\x81\x21\xc6\x0e\x22\xc7\xe6\x15\x42\x7e\x95\x88\xb8\x94\x85\x2e\x90\x22\xf6\x34\xcd\x0b\xc5\x47\x6d\xb1\x6d\x45\x63\x54\x4d\xa7\x39\x4f\x25\x78\x15\x97\x0f\x69\x1e\xae\x21\x8c\x1a\x64\x8d\xe4\x1b\xfa\x46\x43\x8a\x41\x6b\xb4\x47\x2d\xb0\xd1\x2b\xda\x91\x7b\x43\x83\xa6\xdc\xda\xb4\x30\xc8\x2f\xc9\x35\xd9\xd1\x3b\xe4\xa7\x54\xcc\x72\x2e\x15\xb9\x42\xe9\x8a\x08\x03\x0d\xae\x92\x6c\x98\xc8\xd7\xc2\x07\x1b\x09\xc1\x46\x5c\xca\x2b\x9b\xf3\x8c\x7a\xb8\x95\xe3\x25\x29\x04\x40\xba\x82\xf8\xdf\x7a\xeb\xac\xab\x68\x3a\x9b\x19\x72\x4e\x32\x48\x25\x82\xcb\x35\xb2\xb6\x13\x04\xc1\x63\xfb\x04\x78\x98\x15\xcb\xe6\x94\x0d\x23\x88\x52\xf2\xfb\xe2\x81\xbf\x84\xf5\x9f\x11\x86\x17\xc4\x60\x2f\x91\xfb\x20\x9a\xc1\x40\x62\xf0\x45\x91\x30\xc6\x00\x98\x30\x81\x1c\xe2\x8f\xa4\x7b\x51\x72\x03\xaa\xfe\x58\x55\xb4\x10\xc6\xd0\x47\xd6\x4c\x84\xb3\x73\xff\x8a\xb9\xc4\x3e\x37\x96\x01\x0a\x05\xc3\x1c\x41\xee\x48\x2c\xe6\x36\xcd\x54\x38\x4b\x42\xbf\xf1\xc6\x5b\x40\xa5\x94\x09\xc6\xed\x5b\x0e\x09\xd7\x30\x7d\x0c\xb1\xcb\xe4\xa0\x44\xb6\x2d\xd3\x78\x9c\x35\x62\xe3\x88\x4d\xbe\x69\x36\x02\x76\x6a\xa1\x22\x1d\x94\xdc\x17\xb3\x45\x6e\x6b\x2b\x88\x4b\xf6\x2d\xe6\x9f\x4a\xb0\x46\xf0\x4e\xac\x1c\x5a\x25\x18\x13\x55\x65\xf4\xe6\x52\x24\x75\xc6\x7e\x7d\x0d\x49\x11\x22\x8b\x5a\xad\xba\x6a\x68\x15\x5e\x8e\xbb\x29\xe4\x50\x2d\x17\x53\x5d\x60\x48\xa9\x95\x10\x00\x01\x3c\xe2\xf1\x3c\x55\x93\x47\xf1\x56\x82\xf8\xa4\x5e\x86\x32\x02\xa2\x34\x2a\x82\xc3\x4f\xd4\x71\x44\xde\x3c\x03\x95\xcd\x38\x06\x0a\x51\x41\x05\x68\xe2\x44\xd2\xdb\x5a\x08\x4a\x4b\x9f\x7a\xcc\x30\xa6\xd5\xa1\xe6\x69\x9a\x2a\x4e\x16\x90\x4b\x6e\x33\xc1\x67\x64\x64\xde\x6f\x8a\x02\xdc\x58\xb8\x37\x17\xa0\xec\x8b\x58\xdc\xdf\x70\x49\x46\xb6\xee\x83\xa2\x01\x0c\x26\x31\x33\xc5\xcd\x1f\x7c\xaa\xc9\x08\x2d\x09\x54\x02\x13\xda\x55\x87\x81\x7b\xe7\x68\x88\xd3\x10\x6b\x5a\x0c\x7e\x53\x30\xed\xd5\x4a\x3b\x63\x84\x7c\xc1\x7d\xba\xb2\xdb\x7a\x7b\x89\x17\x97\x80\xd2\xa1\x60\x7e\x69\x52\xec\x8b\x44\xd8\x8a\xa1\x07\x8c\x5d\x8a\x2b\xca\xe1\x27\x6a\x36\xba\x87\xa1\x0b\xc1\x25\xa0\x82\x10\x9c\x79\x00\xb0\xb1\x04\x3a\x1a\xd4\xe9\x56\x9c\x49\xfa\xc5\x88\x12\x90\x60\xba\xc8\xf5\xc8\xcf\x54\xed\x2a\x1a\x35\xe1\xc0\x82\xdd\x03\x33\xb2\x61\x46\x02\x8e\xe8\x09\x0c\x2b\x86\x62\x51\x1e\x15\x33\x7e\xa8\xc1\x5d\x13\x7b\x20\xe0\xfb\xec\xdb\x7f\xef\xf7\xbf\xfb\xb7\x7d\x70\xcc\x06\x2d\x10\x55\x55\x35\x93\x35\xa6\xcc\x3b\x56\x6d\x67\x34\x03\xbe\x7b\x7b\x90\x79\x86\x90\x76\xbc\x84\x93\xf9\xbe\x02\xa4\x12\xac\x4c\x5d\x51\xb5\xb3\x53\x73\x5d\x32\xf0\xb0\x54\xcf\xd1\xdb\xe8\x03\x2b\x7d\x49\xb7\x0b\xb5\xc2\x12\xbc\x74\xcc\xf6\xe8\x1d\x7b\x70\x70\xe8\x84\x3d\x14\xd9\x2c\x18\x26\x89\xd1\x69\xc6\x1e\x2e\xc7\x57\x54\xf4\xfb\x76\x18\x94\x3e\x01\x83\xae\x5f\x96\x97\xd9\xd5\x01\xec\x89\x95\x09\x2f\x43\x3a\x8e\x5c\x31\x02\xf0\x47\x63\xc6\xee\x06\x7b\xb0\x7e\xe2\x88\x88\xa8\xdd\xd9\x33\x60\x8c\x3b\x41\x56\xc9\xc0\xed\x81\x5a\x49\xd5\x60\x8f\x6a\x3a\x81\x32\x6d\xbc\xb3\x43\x6b\x24\x59\xbf\x3f\xde\x67\x77\xd1\x53\xca\x6e\x2f\x25\x9c\x3f\x5c\x00\x97\x74\x09\xd2\xd0\x3e\xa0\x19\x5b\x5c\x5a\x5b\x24\x03\x82\x1b\xa3\x8c\x2d\xbd\x84\xb0\xa0\xc1\x29\xe0\xa5\x57\xc0\xc1\xa8\x95\x95\x67\x70\x4c\xfb\x54\x82\xb1\xf3\x59\x90\x8a\x60\x21\x54\x76\x07\xce\x13\xdc\x80\x1b\x0c\xf6\x86\xe0\xda\x9a\xdf\x71\x19\x00\xad\x0b\x4e\x83\xfb\xf4\x23\xf8\x4f\xa0\xe7\xdc\xec\x96\xfc\x96\x4b\x2e\xa6\xb0\xc1\x2c\x30\x13\xa9\x94\xe9\x32\xe0\x39\xc7\xac\x1e\x80\x93\xce\xcd\xf0\xff\x72\x59\x0c\x10\xec\x2c\x30\xf5\x1e\x1c\x59\x20\x43\x9e\x1d\x5e\x1c\x4f\x4e\xaf\xdf\x1e\x5e\xfc\x74\x7d\x7c\x72\x32\xfe\xf1\xf0\xe4\xfa\xf0\xec\xec\xf0\xbf\xaf\x8f\x4f\xdf\x8c\x7f\x23\x46\x30\x56\x82\x54\x42\x65\xd7\x94\xba\x19\xdd\x1b\x46\xc8\xb9\x15\x90\x65\x8f\x40\x42\x43\xf6\x51\x54\xfd\x7e\xb6\xef\x45\xd0\xe5\xf8\x02\xc8\x51\xc0\x74\x76\x9b\x79\x6a\x82\x5f\xde\x9d\x5f\x04\xa7\x93\x8b\xe0\x86\x07\x77\x20\x54\xc8\xfa\x40\x36\x88\xc4\xf0\x6a\x22\x45\x00\x61\xc6\xb1\xa5\x30\xe6\xd5\xcc\x76\x58\xf9\xc7\xe1\xc9\xbb\xf1\xf5\xe4\xdd\xc5\xf5\xe4\x87\xeb\xef\x27\xef\x4e\xdf\x9c\xaf\x73\x91\xb2\xc5\x0b\xca\xac\x7c\xe5\x0b\xca\x1f\xec\xf5\xc0\xd3\xeb\xfa\xf8\x4f\x82\x31\x35\x63\x59\x53\x55\xff\xb9\x07\x27\x66\x34\xb9\xd6\xd0\x10\x87\xfe\xc4\x9a\xdf\x1b\x4f\xfe\xb2\xf1\xf4\x96\x10\x3d\x21\xb8\x43\xa8\x8c\x1f\x53\x29\x40\xc7\x21\x51\x90\x79\xe6\xdc\x70\x6a\xe3\x61\xf0\x91\x2f\x55\x20\xa0\x74\x53\x8b\x12\x93\x0c\x04\x59\x0f\x64\x69\xfc\xc1\xfb\x71\x90\x36\x7e\x9c\xba\x86\x40\x6d\xd3\x3e\x94\x42\xa0\x41\x73\xb5\x12\x64\x75\xc9\x08\xde\xea\xc2\x6f\x33\x56\x27\x7c\x6e\xe4\x8e\x31\x0c\xc0\x5e\xf2\x26\x7a\x0d\x93\x3a\x58\xd5\x98\x15\x1c\xba\x04\x95\xb4\xb0\x7e\xe1\xa0\xd6\xc5\x29\x9c\x54\x7d\x30\x5f\xad\x30\x80\x77\x8d\x64\x02\x59\x2c\xb5\x91\xc8\x32\x9d\x7a\x39\x74\xd4\x0d\x26\x73\x7d\x78\x7a\x3d\xf9\xfe\x67\x28\xfc\x08\xe0\xe3\xc6\x4e\x41\xa6\xf9\x25\x47\x99\x3f\x07\xf5\x43\x51\x7e\x08\x4a\x97\x2c\x3d\x0e\xa8\x4b\xd0\xca\x0a\xbf\x4a\x05\x2e\x9b\x21\xdf\x67\x3f\x1c\x0d\xfe\xfe\x1f\xc3\x57\x1d\xfc\x93\xb7\xe0\x29\x60\x73\x78\x8a\x6f\x90\x6f\x54\xe2\xdc\x06\xa1\xe7\x68\xc1\xc9\x4d\x6a\xd2\xc0\x81\xd9\x74\xd5\x4d\x94\x21\xc1\xba\x0e\x9d\x0f\xd9\x06\x2d\x4e\x8b\x72\xe9\x5f\xc1\x6c\xb7\x90\x74\x2b\x8b\xfb\x67\x49\xc2\xc9\x4d\x92\x4a\x38\xca\x63\x58\x09\xd3\x12\xcb\xba\xf4\x26\x37\x26\xf1\x01\x71\x7f\x00\x15\xcd\x82\x0f\x88\xf7\x43\x4b\x84\x51\x87\xfc\x1f\xce\x26\xbf\x5c\x9f\x8d\xff\xeb\xdd\xf1\xd9\x78\x8d\x7e\x17\x3b\x1c\xf9\xce\x9d\x5a\x23\x1a\xfb\x2a\x0d\x43\xb5\x41\xf3\xd8\x04\xbf\x67\x39\x31\xb3\x5f\xce\x0a\x90\xf1\x81\x06\x1f\x1c\x7e\xc7\x14\xe2\x7e\x9e\x29\x1b\x73\xfe\x12\xae\xd2\xd0\xb3\xf3\x2f\xe7\xe7\xe8\xf0\x14\xbd\x0b\x0e\x55\x17\x87\xc7\xa7\xd7\x10\x49\xc7\x3f\x1c\x9f\x76\xf9\x33\xd5\xbe\xe3\xd1\x70\xf0\x64\xab\x24\x6b\xef\xad\x8c\xef\xb3\xbc\x62\xc5\xe6\x28\x42\xca\x20\x33\xab\x1d\x48\xd9\xe6\xa1\xcb\xfc\x51\x2a\x0c\x87\x5c\x42\x20\xba\xc7\x48\x60\xb8\x6a\xe8\x0f\x52\x6d\xd2\xc1\x8c\xab\x4c\x82\xb7\x22\xf2\x4d\xaf\x71\x0c\x1d\xbe\xa9\x59\xa8\x63\xfd\x16\xc5\xd8\x83\x52\x6b\xe0\xfa\x8e\x37\x9a\xc2\x90\x66\x99\x04\x72\x8b\x17\xc9\x45\xc2\x3a\x94\xa6\x86\x3e\x4c\x6f\x3a\x98\x15\xdc\xaa\x8f\x7f\x82\xd3\xd8\x26\xcd\xef\x4e\xcf\xc6\xe7\x93\x93\x7f\x1c\x7e\x7f\x32\xde\xa4\xfa\x25\x97\x37\x9a\x98\xb3\xa7\xa2\x1c\x59\xd2\x29\x62\x1d\x59\xb7\xa7\xc6\x88\x46\xd6\x87\x2a\x5a\x42\xc9\xe8\xca\x21\x1e\x5e\xce\xaf\x9c\x76\x21\x87\xbf\x48\x0f\xa0\x2a\x63\x91\xde\xf3\x7f\x82\x7f\xc4\xfe\xa5\x12\x30\xc1\x62\xab\x04\x9a\x2c\x33\x77\x47\x65\xdb\x5a\xee\x99\x33\x41\x87\x9a\xb7\x78\xe8\x0f\x14\xf6\x5f\xa1\x52\x0a\xee\x17\x4a\x63\x91\x01\x46\xe4\x8b\x87\x73\x70\xdc\xf1\xe9\xd1\xd8\x27\x13\x53\x00\x11\x23\x01\x38\x57\xb1\x9f\xcf\x27\xa7\xb1\xa9\x7b\x42\xf3\x68\x03\x69\x76\xbb\xc4\x9c\x45\xb3\xf6\x91\x1e\x6a\xc8\xde\xd0\x75\xd7\xda\xc5\xbf\x78\x5d\xd7\xe8\x78\x06\x58\x2b\x3f\xcd\x61\x40\x44\xae\x49\x24\x8d\x6d\xe1\xa9\x4e\xe9\x14\x28\x86\x50\x3d\xf3\xa7\x1f\x99\x58\xd6\x64\x65\xca\x06\x1d\xa3\xaf\x2f\xad\xaa\xa7\xa0\xc5\x56\x67\xc5\xed\x98\x98\x94\x19\x63\xe9\x70\xd0\x7a\x1e\xb5\x4f\x76\xf6\x56\xe0\xf2\xaa\x39\xaf\xd8\x34\xaf\xd7\x8f\x94\x02\x02\x14\xb7\xad\x04\x38\x55\x38\x0c\x1c\xce\xb5\xd8\xde\x7b\x02\x97\x5c\xeb\x24\xf8\x93\x1d\x54\x0a\xcc\xf3\x0c\x65\x2c\x1c\x33\x5c\x1b\x62\xfb\xfa\x19\x54\x79\x9a\x9b\x6d\x6e\xad\xf1\xcd\x2f\x07\xbe\x01\x1a\xcf\x31\xb6\x6d\xb0\xee\x0e\x66\x27\xda\x64\xe5\xf9\xc9\x42\x41\xf1\xc0\x4c\xcd\x83\x59\xef\x42\xc1\xfa\x8e\xce\x1a\x8c\x81\xad\x05\xa6\xd6\xb4\x4e\x26\x2d\x65\xb8\x1c\x89\x43\x27\xfd\x2b\x89\xfb\x62\xc4\x18\xf3\xb7\xcb\x50\x9a\x62\x8e\x36\x52\x8c\x2a\x8a\x64\x6c\x69\x47\xd9\x79\x86\xeb\xab\x8a\x2e\x5e\xd2\xba\xef\xfc\x70\x3a\x6c\x83\xfe\xac\xfa\x5b\x1b\xf7\xa2\xff\x87\x01\xe4\x31\xfe\x59\x79\xe7\x31\xfe\x59\x11\xe4\x31\xfe\x59\x06\xf3\x18\xff\x2a\x7a\xbb\xce\x08\x9c\x7b\x63\x4b\x64\xcb\xbf\xa1\x66\xef\x56\xc2\x0d\x57\xcd\xe3\xba\xd3\x70\xdb\x87\xe9\x10\x89\xa5\x73\xd3\x58\xd8\x94\x46\xeb\x8c\xff\x8c\x2b\x22\xd4\x7c\x0b\x85\xd8\x7e\x6c\x03\x5e\x17\x5c\x2d\x36\x3c\xdf\x3f\x67\xdd\xf8\x64\xad\x5b\x7f\xd6\xc8\x1a\xa6\xbc\x9d\xbd\x28\xfc\x2d\x94\xac\x05\x55\x1d\x41\x5a\x59\x1f\x7b\xc1\x32\xbb\x76\x59\x55\xc9\x94\x1d\x62\x60\x8f\x33\x65\xfe\x0f\x3a\x6f\xdb\x08\xd0\x26\xa4\x41\xae\x73\x1d\xa9\xe6\xe0\xe3\x82\x36\xf6\xf4\x4d\xa4\x65\x59\x62\xaf\x3f\x9e\xb9\x21\x75\x07\x1e\x9a\xe1\x85\x40\xbb\xd5\x6b\x1d\xc0\x35\x15\x7d\x4f\x12\x33\x27\x13\xf6\xd9\x9c\x31\x99\x74\xad\x4b\x9f\x2d\x59\x61\x07\xb4\xe4\x9c\x65\xfe\x74\xc7\xc1\xf7\x75\x44\x45\x85\x51\x58\xc7\x3f\xab\x42\x98\x24\x67\x9a\x76\x6c\x86\x7d\xc7\xfa\xa9\xce\x32\x4c\x35\x6f\x9c\xcd\xb1\x19\x89\x8d\x64\xf6\x54\x41\x12\x6b\xb5\xed\x9a\xf3\x81\x6d\x64\x82\xf1\xba\x27\x27\x02\x27\x0a\xea\x47\x6b\x98\x0d\xf8\xf5\x39\xec\x57\x36\xcf\xf5\xec\x1a\xe1\xeb\x9c\xd4\xeb\xfc\xb4\xf9\x8f\x68\x2d\x7b\xdb\x9e\x6a\xb5\x25\xa3\x27\x90\x9d\xc8\x81\x0f\x26\xd2\x87\xec\x0e\xb1\xc1\xc0\x09\x0c\x34\x8e\x0b\xe9\x98\xbf\x4e\xeb\xde\x0c\xa4\x63\xbf\x09\xaa\x6f\x70\xcc\xd8\xdc\xcb\x81\xe1\xb5\x5f\xc3\xce\x4d\xb6\x46\x35\x37\x1d\x50\xdb\xfa\x0c\x54\xfc\xeb\x39\xb6\x2c\x7b\x3c\xfe\x95\xdf\x9c\x17\xd3\x8f\xdc\x5d\xc0\x90\x0b\x50\x62\x70\x03\x4f\x8a\xcb\xa6\xe0\x71\xc7\xf8\xa0\x5e\xad\x88\xbd\x82\x79\x54\x0c\x4e\xd4\xe6\x64\x9f\x38\xd0\xe7\xe7\x63\xeb\x6a\x4a\xf1\x66\xd2\x77\x0a\x1d\x16\x50\x5c\x5d\xdf\x98\x6f\x0b\x80\xa2\xa0\x90\xee\x19\x40\x10\x2c\x1b\x04\xe8\x5d\x30\x62\xbf\x3e\x20\x11\xdd\xfd\x3d\x7c\x54\x2b\xfc\x4e\x21\x52\x07\xa3\x5d\x13\x1d\xc1\xb2\xcc\xaa\xd2\x36\x87\xa7\x45\xbe\x43\x76\x77\xc9\x4e\x19\xcf\x0b\xa5\x77\x84\x33\xe8\x47\x34\x0f\xc1\x44\xd3\xfc\xf8\x1d\xe1\xec\x52\xf2\xa8\xb0\xff\x61\x16\x2d\x64\x0e\x56\xde\x93\x4d\x67\xa1\xb6\x31\xe9\xe4\x73\x2c\x8c\x75\xf8\x03\xbe\x95\x02\xbc\x78\x87\x78\xe0\x52\xa1\x3b\xb8\x44\x52\x88\x45\x69\x4c\xae\x55\xef\x54\x7e\xca\xdc\x2c\x6c\x9d\x99\x16\x42\x00\xf8\xad\x73\xb3\x4c\x3d\x3f\xed\x66\xf8\x0c\xdb\x9f\xed\x11\x30\x0b\x7b\xde\x21\x0f\xaf\x08\x4d\xf1\x8a\x53\x6d\xdc\x4c\xb8\x9b\x12\xa8\x46\x0b\x37\xe4\xb3\x79\x6a\x6b\x29\xb0\x69\x59\x25\x68\x3e\xe0\x8d\xd4\xa8\x7f\x6b\xa6\x53\x21\xae\x31\x31\x1e\x97\x81\x3e\xed\x7a\x34\x89\x67\x37\xc0\xaa\x7a\x87\xd1\x25\xcb\x68\xed\x25\x60\x48\xf6\x94\xd0\xdd\xee\xef\x13\xd7\xd5\x05\x63\x3d\xbe\x65\x9c\xfb\xfa\x94\x1b\x70\x02\x2b\x67\xdd\x2e\x60\x4d\xe8\x85\xda\x71\x63\xcc\x74\x96\x12\x1f\x67\xf7\xeb\xa6\x32\x24\xbc\xb2\x28\xc3\x56\x29\xed\x6a\x52\xf2\x35\x9e\x3a\xc4\xe5\xf0\x6a\xb5\x32\x43\x40\x4f\x5d\x2f\x0a\x5b\xc2\xda\xf1\x08\xdf\xd9\xbc\xd5\x6a\xf7\x62\xd7\x55\xc2\xe3\xf5\xab\xb7\x90\x58\x99\x10\xf0\x6c\xba\x75\xfa\xf6\xd6\xcf\x27\xf6\xab\x85\xcb\xe6\x96\xc8\x5f\xdc\xba\x8f\x22\x88\xb9\xe8\x24\x78\xe1\x0d\x2c\x15\x53\x13\xcc\x93\xa2\x73\x15\x6a\x2d\x68\xcb\x65\xa8\x8d\x3e\xa0\x1b\xda\x0c\x84\xe6\xe6\x0e\xbf\x28\xe8\x7e\xff\x61\xee\x48\xfd\x75\x74\xb3\x3c\xd6\x51\x63\xa7\xae\xdd\x8d\x4b\xc1\x6f\xc2\x88\x76\xf0\xf8\x9b\x33\x9e\xa7\x4b\x77\xb3\x68\x5f\xd8\xde\x70\xe8\x3f\xe7\xf0\x7e\xbc\x13\xee\xbe\x3f\x70\x11\xc2\x8f\x45\x07\xa4\x4f\x46\xe4\x80\x44\x3b\xa4\x64\x64\x27\xdb\x21\xfd\x07\xf8\x6f\x3b\xae\x0f\x6b\x07\x35\x51\xc6\x1f\xea\xc0\x07\x31\x74\xd4\x9d\x6a\xdd\x9c\x81\x4d\x3e\x61\x1b\xfb\x08\x4e\xf6\x30\x98\xa5\xb9\x1a\x41\x9d\x61\x69\xb3\xb7\x68\xc9\x34\x06\xc5\x8f\x53\x88\xc6\xed\xcc\xcc\x0d\x3c\x7f\xf7\xca\xf8\x25\xc1\x77\x73\x0f\x7b\x03\x09\x17\xef\x43\x9d\x34\x4a\x90\x04\x88\x30\xd6\xf8\x51\x53\xf7\xce\xd9\x4f\x99\x1d\xe6\x02\x8f\x7e\xc3\xbf\x75\xfb\x54\xce\x79\x79\x34\xe7\xd3\x8f\xa0\xa1\x8a\x36\x51\xe4\x05\xbd\xfa\x10\xe2\xf5\x51\x51\xf7\xf8\x59\xdd\xd6\x54\xb6\xb4\x6b\xe3\x8b\x53\x11\x0e\x24\x2d\x41\xe2\x7d\xe6\x16\xd1\x60\x2d\x6f\xa5\x02\x55\x29\x2e\x02\x31\x84\x1a\xec\xa4\xed\x9f\x2d\x0d\xe0\x37\x4c\x9d\xcf\x31\x5a\x73\xee\xb6\x7e\xb5\xea\x6c\xae\x35\xbb\xb1\xb5\x9e\xf1\x9f\x7d\xe1\x0a\xe3\x2e\x46\x82\xf8\x91\xc5\xd6\x1a\x6d\xdd\x9a\xe1\xf1\x39\x84\x7e\xbe\xf3\x85\x53\x0b\x31\x7e\x19\xd0\x58\xa2\xfd\xae\x03\x0c\xb0\x6e\x86\x58\x29\x6f\x68\xd0\xac\x23\x38\x4b\x22\xbb\x2a\x13\xed\x45\xdb\xf5\x95\x89\x5a\x5d\xfe\xb5\xfd\xe1\x5c\xcb\x67\xd7\x0c\x0c\x64\x51\x1b\x57\x1b\x4d\x4b\xdd\xcd\x82\x64\xed\x63\x09\xc0\xe9\xdc\xe3\x0d\x70\x1f\x8b\xe2\x31\xc4\x52\x11\x2f\xb3\x21\x0c\x0f\xec\xd3\x3e\xa0\x71\xe2\x72\x41\x86\xda\x09\x2c\x50\xb7\x90\xd9\xa0\x6b\xd3\xfa\x1d\xff\x06\x4d\x18\x24\xe9\xaf\xf1\xdb\x76\x66\xf3\x01\x76\x67\x44\xbb\x91\xc2\xcd\x55\x7d\xab\xe5\xe1\xd4\x6c\x74\xd0\x4e\xe4\x30\xe7\xcb\x5e\x61\x04\x78\xd0\x2c\xb1\xf2\x0c\xa3\x91\x88\x6f\x8a\xd9\xd2\xb1\x02\xc9\xe9\x20\x14\x18\xc3\x74\x7a\xe0\x8a\xd5\xd0\xcf\x50\xbb\x34\x1a\xcd\x37\x86\x28\xf1\x74\xb7\x0e\x00\x6e\x4d\xfc\xb5\x01\xd3\x60\x70\x03\x3e\x98\xfa\x82\xa4\x06\x1a\x75\xeb\x16\xe1\x9f\xcc\xd5\xe2\x7a\x90\x75\xa6\xd7\x61\x9b\xa0\x5b\xba\x7a\x48\x11\x27\x60\xf3\x61\xc4\xba\x59\xb6\x8a\x93\xe1\x5a\xa5\x13\x76\x0c\x2f\x74\x50\xb6\x7f\x84\xb3\x59\xe3\xb4\x8b\x22\x0f\xc9\x10\xfd\x37\xf6\xaa\x9b\x43\xfa\xfd\xa6\x84\xee\x64\xa1\x0d\x13\x72\xe0\xda\xf6\xd3\xc0\x8d\x1c\x81\xf6\xdb\x90\x8d\x13\x9e\x17\x8d\xc6\x38\xc1\x63\x53\xbe\x32\x55\x85\x8f\x00\xab\x78\xa4\xb3\x62\x6a\x3e\x64\x72\xb7\xb7\x51\x05\x16\xff\xd5\xff\x05\x00\x00\xff\xff\x24\xa0\xaf\x81\x92\x2b\x00\x00")

func distVeloxMinJsBytes() ([]byte, error) {
	return bindataRead(
		_distVeloxMinJs,
		"dist/velox.min.js",
	)
}

func distVeloxMinJs() (*asset, error) {
	bytes, err := distVeloxMinJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dist/velox.min.js", size: 11154, mode: os.FileMode(420), modTime: time.Unix(1457749108, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"dist/velox.min.js": distVeloxMinJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"dist": &bintree{nil, map[string]*bintree{
		"velox.min.js": &bintree{distVeloxMinJs, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

