// Code generated by go-bindata.
// sources:
// dist/velox.min.js
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _distVeloxMinJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x3a\x6b\x53\xe3\xc6\x96\xdf\xf3\x2b\xe4\xae\x94\x4b\xba\xb4\x85\x99\x4c\xee\xee\x5a\xd3\xb0\x84\x71\x12\x52\x04\xcf\x02\x73\x93\x2d\x86\x30\xc2\x6e\xb0\x32\xa2\xa5\x6d\xb5\x61\xbc\x58\xf9\xed\x7b\x4e\x3f\xa4\x96\x6d\xc8\xdc\xda\x54\xdd\x2f\xb6\xd4\x8f\xf3\x7e\xf5\x69\xed\xee\x06\x0f\x3c\x2f\x3e\x07\x83\xe0\x61\x18\xbf\x8a\x5f\xc3\xc3\x5c\xa9\xb2\x1a\xed\xee\xde\x65\x6a\xbe\xb8\x89\xa7\xc5\xfd\xee\xef\x65\x96\xe7\x85\x4c\x77\xf5\xe2\xaf\x60\xd7\x4f\x69\x76\xcf\x83\x77\x66\x38\x78\x33\xe3\x0f\xff\xe9\x16\xe1\x8e\x7d\x80\xf3\xf3\xf1\x45\x70\x54\x94\x4b\x99\xdd\xcd\x55\xf0\x6a\xb8\xf7\xf7\xaf\x7a\xb7\x0b\x31\x55\x59\x21\xc2\xe8\xa9\x7d\x56\xd1\x53\x76\x1b\xf6\x42\x32\x7e\xe0\x42\x9d\x17\x0b\x39\xe5\x24\x13\x81\x8a\xa2\xa7\x87\x54\x06\x9c\xed\xfe\x16\x7e\xa8\x56\x1f\x16\xc3\xe1\xe1\x30\xda\x59\xf9\x2f\x5f\xef\xde\x51\xc1\x7c\x58\xee\x39\x30\x90\xe3\xeb\xb2\xc8\xf3\x0b\x20\x57\xb2\x8a\x2b\x7c\x28\x16\x2a\xf4\x28\x29\xe2\x69\x9a\xe7\x61\x16\xd5\x54\x45\x75\xb3\xbd\x80\x29\x25\x97\x48\x5b\x16\x4b\x9e\xce\x96\xe7\x2a\x55\x9c\xb1\x2c\x3e\x3a\x99\x9c\x8f\xdf\x46\x92\xab\x85\x14\x09\xd2\xa8\x98\xe0\x8f\xc1\xaf\x3f\x9f\xfc\x08\xd2\x3b\xe3\xff\xb3\xe0\x95\x4a\x54\x5c\x94\x5c\x84\xe4\x87\xf1\x05\xa1\x59\xfc\xfe\xec\x84\xf6\x86\x11\x55\x31\xd0\x61\xd7\xfc\x08\x70\xb9\x0c\xc9\xe1\x74\xca\x4b\x45\x28\x51\xfc\xb3\xda\xe5\x28\x88\x41\xa5\x00\xeb\x3d\xd9\xbe\xe1\x28\x9d\xce\xf9\xe0\xa8\x10\x4a\x16\x39\xec\x13\xc5\x60\x8a\x43\xcf\x2c\xff\x75\x60\x07\xf8\x6c\xf0\x0b\x28\x16\x76\x74\x89\x85\x7d\x62\x91\xe7\x3d\x56\xf5\xfb\xdb\x00\x9c\xa4\x95\x1a\x68\x05\x0d\x8e\xdf\x12\x5a\x45\x74\xce\x08\x01\x5c\xca\x08\x94\x7d\xcb\x5f\xc3\x5b\x21\xb4\xa4\x2a\x94\xd4\x74\x9e\x8a\x3b\xce\x3c\x49\x83\x28\xbf\x61\x4c\xcd\xb3\xca\x13\xe8\x6a\xf5\x7a\x63\xac\xdf\x7f\x35\x1c\xda\x51\x84\xb5\xa8\x50\x93\x6b\x4a\x98\x9c\x9e\x8e\x8f\x2e\x8e\x4f\x7f\xe8\xf7\xbb\x1a\xca\xe2\xc9\xbb\xf1\x29\x48\x7c\x96\x55\x65\xaa\xa6\x73\x4d\x77\x48\x50\x1b\x84\x3e\xa9\x65\xc9\x47\xe6\xa5\x8e\x22\xab\x3e\x42\x12\x54\xb6\x72\x94\x54\x65\x21\x2a\x7e\x01\xda\x58\xad\x08\xa9\xa7\x08\x26\x2c\xa2\xa7\x1a\x97\x4f\x19\x88\x68\x71\x03\x0a\x0a\xe7\x71\xce\xc5\x9d\x9a\x47\x71\x55\xe6\x19\x20\xf9\x20\x40\x94\x25\x23\xf7\xbc\xaa\xd2\x3b\x4e\x68\xce\x2e\xaf\xe8\x82\x0d\xe9\x2d\x22\xb9\x2d\x60\x0f\x53\xc9\xe2\xcd\xd4\xee\x4c\x16\x3b\x3b\x11\x48\xe6\x96\x4d\x2f\x17\x57\x80\xba\xcc\xd3\x29\x0f\x39\x25\x00\x08\x84\x70\x1b\x67\x62\xc6\x3f\x4f\x6e\x43\xa2\xed\x82\x44\x51\x09\x83\x6e\x9d\x31\x96\xd1\xc1\x87\xea\x6f\xbb\xb8\x25\xe1\x79\xc5\x03\x80\xd7\xdd\x0a\xb6\x2a\x97\xb0\x55\xff\xb3\x32\x95\x15\x3f\x06\x99\x78\x70\xf4\x4c\x0b\x27\xa2\x59\x75\x9a\x9e\x86\x7a\x38\x5a\xad\xc2\x94\x99\xc7\x67\x10\xcc\x52\x95\xc2\xae\x3c\x2e\x17\xd5\xdc\x87\x8b\x13\x1e\xd8\x67\xb6\x67\xb3\x11\x4c\x56\x3e\x63\x30\xf4\x67\x5c\x65\x33\xbd\x09\x2d\xb7\x59\x41\x08\x2c\xe9\xf7\x73\xa7\x18\x1d\x43\x66\xda\x3f\x65\x98\xc7\xbf\x17\x99\xb0\x5a\xca\xe2\x85\xcc\xc1\x94\x93\x75\x4b\x29\xe9\x2c\x32\x7a\xf3\x14\x59\x6f\x33\x53\x11\xa6\x51\x6d\x30\x7b\xe3\xbd\x36\x48\x80\x6d\x6e\xee\x3b\x58\xb7\xd7\xd6\x96\x37\xad\x96\x4b\x59\xc8\xc6\x6c\xcd\x5b\x0d\xde\x0a\x98\xa3\xd1\xf0\x19\x9a\x30\x96\x81\x17\x8b\x59\x18\xd1\xed\x51\x4f\xc5\xe9\x4d\x21\x55\xa8\x57\x5a\x27\x46\x91\x5c\x7f\x9e\x4b\xa6\x5a\x83\xff\x22\x7a\xa8\x56\x72\x11\x5b\x59\xd5\x51\xad\xfd\x24\xd3\xc4\xd1\x94\x7d\x3b\x1c\x52\xa3\x26\x1d\x36\x12\x8c\xf7\xe8\x58\xe0\x41\x99\xb8\x23\x3d\x86\xc0\x8a\x5b\x08\xf9\x6a\x2e\x8b\xc7\x00\x95\x75\xbe\x14\x2a\xfd\x3c\x46\xf8\x21\x39\x2d\x54\xc0\x45\xb1\xb8\x9b\x07\xa9\xbc\x5b\xdc\x03\x25\x15\x58\x85\xe6\x1d\xe2\x2a\x53\x74\x4d\x0c\x46\x2c\x9e\x5c\xf5\xbb\x97\x0b\x34\x31\x66\x10\x39\xd6\xaf\x10\xf2\xeb\x44\xc4\xa5\x2c\x54\x81\x14\xb1\xa7\x69\x5e\x54\x7c\xe4\x8b\x6d\x2b\x1a\xad\x6a\x3a\xcd\x79\x2a\xc1\xab\xb8\x7c\x48\xf3\x70\x0d\x61\xd4\x22\x6b\x25\xdf\xd2\x37\x1a\x52\x0c\x5a\xa3\x3d\x6a\x80\x8d\x5e\xd1\x8e\xdc\x5b\x1a\x14\xe5\xc6\xa6\x85\x46\x7e\x49\xae\xc9\x8e\xda\x21\x3f\xa6\x62\x96\x73\x59\x91\x2b\x94\xae\x88\x30\xd0\xe0\x2a\xc9\x86\x89\x7c\x23\x5c\xb0\x91\x10\x6c\xc4\xa5\xbc\x32\x39\x4f\xab\x87\x1b\x39\x5e\x92\x42\x00\xa4\x2b\x88\xff\xde\x5b\x67\x5d\x4d\xd3\xd9\x4c\x93\x73\x92\x41\x2a\x11\x5c\xae\x91\xb5\x9d\x20\x08\x1e\xdb\x27\xc0\xc3\x8c\x58\x36\xa7\x4c\x18\x41\x94\x92\xdf\x17\x0f\xfc\x25\xac\xff\x8c\x30\x9c\x20\x06\x7b\x89\xdc\x07\xd1\x0c\x06\x12\x83\x2f\x8a\x84\x31\x06\xc0\x84\x0e\xe4\x10\x7f\x24\xdd\x8b\x92\x1b\x50\xf5\xa7\xba\xa6\x85\xd0\x86\x3e\x32\x66\x22\xac\x9d\xbb\x57\xcc\x25\xe6\xb9\xb5\x0c\x50\x28\x18\xe6\x08\x72\x47\x62\x30\xfb\x34\x53\x61\x2d\x09\xfd\xc6\x19\x6f\x01\x95\x52\x26\x18\x37\x6f\x39\x24\x5c\xcd\xf4\x31\xc4\x2e\x9d\x83\x12\xe9\x5b\xa6\xf6\x38\x63\xc4\xda\x11\xdb\x7c\xd3\x6e\x04\xec\xd4\x40\x45\x3a\x28\xb9\x2f\x66\x8b\xdc\xd4\x56\x10\x97\xcc\x5b\xcc\x3f\x97\x60\x8d\xe0\x9d\x58\x39\x78\x25\x18\x13\x75\xad\xf5\x66\x53\x24\xb5\xc6\x7e\x7d\x0d\x49\x11\x22\x4b\xb5\x5a\x75\xd5\xe0\x15\x5e\x96\xbb\x29\xe4\x50\x25\x17\x53\x55\x60\x48\x69\x94\x10\x00\x01\x3c\xe2\xf1\x3c\xad\x26\x8f\xe2\x9d\x04\xf1\x49\xb5\x0c\x65\x04\x44\x29\x54\x04\x87\x9f\xa8\xe3\x88\xbc\x7d\x06\x2a\xdb\x71\x0c\x14\xa2\x86\x0a\x50\xc7\x89\xa4\xb7\xb5\x10\x94\x86\xbe\xea\x31\xc3\x98\xd6\x84\x9a\xa7\x69\x5a\x71\xb2\x80\x5c\x72\x9b\x09\x3e\x23\x23\xfd\x7e\x53\x14\xe0\xc6\xc2\xbe\xd9\x00\x65\x5e\xc4\xe2\xfe\x86\x4b\x32\x32\x75\x1f\x14\x0d\x60\x30\x89\x9e\x29\x6e\x7e\xe7\x53\x45\x46\x68\x49\xa0\x12\x98\x50\xb6\x3a\x0c\xec\x3b\x47\x43\x9c\x86\x58\xd3\x62\xf0\x9b\x82\x69\xaf\x56\xca\x1a\x23\xe4\x0b\xee\xd2\x95\xd9\xd6\xdb\x4b\x9c\xb8\x04\x94\x0e\x05\x73\x4b\x93\x62\x5f\x24\xc2\x54\x0c\x3d\x60\xec\x52\x5c\x51\x0e\x3f\x51\xbb\xd1\x3e\x0c\x6d\x08\x2e\x01\x15\x84\xe0\xcc\x01\x80\x8d\x25\xd0\xd1\xa2\x4e\xb7\xe2\x4c\xd2\x2f\x46\x94\x80\x04\xd3\x45\xae\x46\x6e\xa6\xf6\xab\x68\xd4\x84\x05\x0b\x76\x0f\xcc\xc8\x96\x19\x09\x38\xa2\x27\x30\xac\x18\x8a\x45\x79\x54\xcc\xf8\xa1\x02\x77\x4d\xcc\x81\x80\xef\xb3\xd7\xff\xde\xef\x7f\xfb\x6f\xfb\xe0\x98\x2d\x5a\x20\xaa\xae\x1b\x26\x1b\x4c\x99\x73\xac\xc6\xce\x68\x06\x7c\xf7\xf6\x20\xf3\x0c\x21\xed\x38\x09\x27\xf3\xfd\x0a\x90\x4a\xb0\xb2\xea\x8a\x56\x3b\x3b\x0d\xd7\x25\x03\x0f\x4b\xd5\x1c\xbd\x8d\x3e\xb0\xd2\x95\x74\xbb\x50\x2b\x2c\xc1\x4b\xc7\x6c\x8f\xde\xb1\x07\x0b\x87\x4e\xd8\x43\x91\xcd\x82\x61\x92\x68\x9d\x66\xec\xe1\x72\x7c\x45\x45\xbf\x6f\x86\x41\xe9\x13\x30\xe8\xe6\x65\x79\x99\x5d\x1d\xc0\x9e\xb8\xd2\xe1\x65\x48\xc7\x91\x2d\x46\x00\xfe\x68\xcc\xd8\xdd\x60\x0f\xd6\x4f\x2c\x11\x11\x35\x3b\x7b\x1a\x8c\x76\x27\xc8\x2a\x19\xb8\x3d\x50\x2b\x69\x35\xd8\xa3\x8a\x4e\xa0\x4c\x1b\xef\xec\xd0\x06\x49\xd6\xef\x8f\xf7\xd9\x5d\xf4\x94\xb2\xdb\x4b\x09\xe7\x0f\x1b\xc0\x25\x5d\x82\x34\x94\x0b\x68\xda\x16\x97\xc6\x16\xc9\x80\xe0\xc6\x28\x63\x4b\x27\x21\x2c\x68\x70\x0a\x78\xe9\x15\x70\x30\xf2\xb2\xf2\x0c\x8e\x69\x9f\x4b\x30\x76\x3e\x0b\x52\x11\x2c\x44\x95\xdd\x81\xf3\x04\x37\xe0\x06\x83\xbd\x21\xb8\xb6\xe2\x77\x5c\x06\x40\xeb\x82\xd3\xe0\x3e\xfd\x04\xfe\x13\xa8\x39\xd7\xbb\x25\xbf\xe5\x92\x8b\x29\x6c\xd0\x0b\xf4\x44\x2a\x65\xba\x0c\x78\xce\x31\xab\x07\xe0\xa4\x73\x3d\xfc\xbf\x5c\x16\x03\x04\x3b\x0b\x74\xbd\x07\x47\x16\xc8\x90\x67\x87\x17\xc7\x93\xd3\xeb\x77\x87\x17\x3f\x5e\x1f\x9f\x9c\x8c\x7f\x38\x3c\xb9\x3e\x3c\x3b\x3b\xfc\xef\xeb\xe3\xd3\xb7\xe3\x5f\x89\x16\x8c\x91\x20\x95\x50\xd9\xb5\xa5\x6e\x46\xf7\x86\x11\x72\x6e\x04\x64\xd8\x23\x90\xd0\x90\x7d\x14\x55\xbf\x9f\xed\x3b\x11\x74\x39\xbe\x00\x72\x2a\x60\x3a\xbb\xcd\x1c\x35\xc1\xcf\xef\xcf\x2f\x82\xd3\xc9\x45\x70\xc3\x83\x3b\x10\x2a\x64\x7d\x20\x1b\x44\xa2\x79\xd5\x91\x22\x80\x30\x63\xd9\xaa\x30\xe6\x35\xcc\x76\x58\xf9\xc7\xe1\xc9\xfb\xf1\xf5\xe4\xfd\xc5\xf5\xe4\xfb\xeb\xef\x26\xef\x4f\xdf\x9e\xaf\x73\x91\xb2\xc5\x0b\xca\xac\x5d\xe5\x0b\xca\x1f\xec\xf5\xc0\xd3\x9b\xfa\xf8\x0f\x82\x31\x35\x63\x59\x5b\x55\xff\xb1\x07\x27\x66\x34\x39\x6f\x68\x88\x43\x7f\x60\xcd\xef\x8c\x27\x7f\xd9\x78\x7a\x4b\x88\x9e\x10\xdc\x21\x54\xc6\x8f\xa9\x14\xa0\xe3\x90\x54\x90\x79\xe6\x5c\x73\x6a\xe2\x61\xf0\x89\x2f\xab\x40\x40\xe9\x56\x2d\x4a\x4c\x32\x10\x64\x1d\x90\xa5\xf6\x07\xe7\xc7\x41\xda\xfa\x71\x6a\x1b\x02\x8d\x4d\xbb\x50\x0a\x81\x06\xcd\xd5\x48\x90\x35\x25\x23\x78\xab\x0d\xbf\xed\x58\x93\xf0\xb9\x96\x3b\xc6\x30\x00\x7b\xc9\xdb\xe8\x35\x4c\x9a\x60\xd5\x60\xae\xe0\xd0\x25\xa8\xa4\x85\xf1\x0b\x0b\xb5\x29\x4e\xe1\xa4\xea\x82\xf9\x6a\x85\x01\xbc\x6b\x24\x13\xc8\x62\xa9\x89\x44\x86\xe9\xd4\xc9\xa1\xa3\x6e\x30\x99\xeb\xc3\xd3\xeb\xc9\x77\x3f\x41\xe1\x47\x00\x1f\xd7\x76\x0a\x32\xcd\x2f\x39\xca\xfc\x39\xa8\x1f\x8b\xf2\x63\x50\xda\x64\xe9\x70\x40\x5d\x82\x56\x56\xb8\x55\x55\x60\xb3\x19\xf2\x7d\xf6\xfd\xd1\xe0\xef\xff\x31\x7c\xd5\xc1\x3f\x79\x07\x9e\x02\x36\x87\xa7\xf8\x16\xf9\x46\x25\xce\x4d\x10\x7a\x8e\x16\x9c\xdc\xa4\x26\x0d\x2c\x98\x4d\x57\xdd\x44\x19\x12\xac\xeb\xd0\xf9\x90\x6d\xd0\xe2\xb4\x28\x97\xee\x15\xcc\x76\x0b\x49\xb7\xb2\xb8\x7f\x96\x24\x9c\xdc\x24\xa9\x84\xa3\x3c\x86\x95\x30\x2d\xb1\xac\x4b\x6f\x72\x6d\x12\x1f\x11\xf7\x47\x50\xd1\x2c\xf8\x88\x78\x3f\x7a\x22\x8c\x3a\xe4\x7f\x7f\x36\xf9\xf9\xfa\x6c\xfc\x5f\xef\x8f\xcf\xc6\x6b\xf4\xdb\xd8\x61\xc9\xb7\xee\xe4\x8d\x28\xec\xab\xb4\x0c\x35\x06\xcd\x63\x1d\xfc\x9e\xe5\x44\xcf\x7e\x39\x2b\x40\xc6\x47\x1a\x7c\xb4\xf8\x2d\x53\x88\xfb\x79\xa6\x4c\xcc\xf9\x4b\xb8\x4a\x43\xc7\xce\xbf\x9c\x9f\xa3\xc3\x53\xf4\x2e\x38\x54\x5d\x1c\x1e\x9f\x5e\x43\x24\x1d\x7f\x7f\x7c\xda\xe5\x4f\x57\xfb\x96\x47\xcd\xc1\x93\xa9\x92\x8c\xbd\x7b\x19\xdf\x65\xf9\x8a\x15\x9b\xa3\x08\x29\x83\xcc\x5c\xed\x40\xca\xd6\x0f\x5d\xe6\x8f\x52\xa1\x39\xe4\x12\x02\xd1\x3d\x46\x02\xcd\x55\x4b\x7f\x90\x2a\x9d\x0e\x66\xbc\xca\x24\x78\x2b\x22\xdf\xf4\x1a\xcb\xd0\xe1\xdb\x86\x85\x26\xd6\x6f\x51\x8c\x39\x28\x79\x03\xd7\x77\xbc\xd5\x14\x86\x34\xc3\x24\x90\x5b\xbc\x48\x2e\x12\xd6\xa1\x34\xd5\xf4\x61\x7a\x53\xc1\xac\xe0\x46\x7d\xfc\x33\x9c\xc6\x36\x69\x7e\x7f\x7a\x36\x3e\x9f\x9c\xfc\xe3\xf0\xbb\x93\xf1\x26\xd5\x2f\xb9\xbc\xd6\xc4\x9c\x3d\x15\xe5\xc8\x90\x4e\x11\xeb\xc8\xb8\x3d\xd5\x46\x34\x32\x3e\x54\xd3\x12\x4a\x46\x5b\x0e\xf1\xf0\x72\x7e\x65\xb5\x0b\x39\xfc\x45\x7a\x00\x55\x19\x8b\xf4\x9e\xff\x13\xfc\x23\xf6\x2f\x95\x80\x0e\x16\x5b\x25\xd0\x66\x99\xb9\x3d\x2a\x9b\xd6\x72\x4f\x9f\x09\x3a\xd4\xbc\xc3\x43\x7f\x50\x61\xff\x15\x2a\xa5\xe0\x7e\x51\x29\x2c\x32\xc0\x88\x5c\xf1\x70\x0e\x8e\x3b\x3e\x3d\x1a\xbb\x64\xa2\x0b\x20\xa2\x25\x00\xe7\x2a\xf6\xd3\xf9\xe4\x34\xd6\x75\x4f\xa8\x1f\x4d\x20\xcd\x6e\x97\x98\xb3\x68\xe6\x1f\xe9\xa1\x86\xec\x0d\x6d\x77\xcd\x2f\xfe\xc5\x9b\xa6\x46\xc7\x33\xc0\x5a\xf9\xa9\x0f\x03\x22\xb2\x4d\x22\xa9\x6d\x0b\x4f\x75\x95\x4a\x81\x62\x08\xd5\x33\x77\xfa\x91\x89\x61\x4d\xd6\xba\x6c\x50\x31\xfa\xfa\xd2\xa8\x7a\x0a\x5a\xf4\x3a\x2b\x76\xc7\x44\xa7\xcc\x18\x4b\x87\x03\xef\x79\xe4\x9f\xec\xcc\xad\xc0\xe5\x55\x7b\x5e\x31\x69\x5e\xad\x1f\x29\x05\x04\x28\x6e\x5a\x09\x70\xaa\xb0\x18\x38\x9c\x6b\xb1\xbd\xf7\x04\x2e\xb9\xd6\x49\x70\x27\x3b\xa8\x14\x98\xe3\x19\xca\x58\x38\x66\xd8\x36\xc4\xf6\xf5\x33\xa8\xf2\x14\xd7\xdb\xec\x5a\xed\x9b\x5f\x0e\x7c\x03\x34\x9e\x63\x4c\xdb\x60\xdd\x1d\xf4\x4e\xb4\xc9\xda\xf1\x93\x85\x82\xe2\x81\x99\xea\x07\xbd\xde\x86\x82\xf5\x1d\x9d\x35\x18\x03\xbd\x05\xba\xd6\x34\x4e\x26\x0d\x65\xb8\x1c\x89\x43\x27\xfd\x2b\x89\xfb\x62\xc4\x18\xf3\xb7\xcb\x50\xea\x62\x8e\xb6\x52\x8c\x6a\x8a\x64\x6c\x69\x47\x99\x79\x86\xeb\xeb\x9a\x2e\x5e\xd2\xba\xeb\xfc\x70\x3a\xf4\x41\xff\xa9\xfa\xbd\x8d\x7b\xd1\xff\xc3\x00\xf2\x18\xff\x8c\xbc\xf3\x18\xff\x8c\x08\xf2\x18\xff\x0c\x83\x79\x8c\x7f\x35\xbd\x5d\x67\x04\xce\xbd\xb1\x21\xd2\xf3\x6f\xa8\xd9\xbb\x95\x70\xcb\x55\xfb\xb8\xee\x34\xdc\xf4\x61\x3a\x44\x62\xe9\xdc\x36\x16\x36\xa5\xe1\x9d\xf1\x9f\x71\x45\x84\x9a\x6f\xa1\x10\xdb\x8f\x3e\xe0\x75\xc1\x35\x62\xc3\xf3\xfd\x73\xd6\x8d\x4f\xc6\xba\xd5\x9f\x1a\x59\xcb\x94\xb3\xb3\x17\x85\xbf\x85\x92\xb5\xa0\xaa\x22\x48\x2b\xeb\x63\x2f\x58\x66\xd7\x2e\xeb\x3a\x99\xb2\x43\x0c\xec\x71\x56\xe9\xff\x83\xce\xdb\x36\x02\x94\x0e\x69\x90\xeb\x6c\x47\xaa\x3d\xf8\xd8\xa0\x8d\x3d\x7d\x1d\x69\x59\x96\x98\xeb\x8f\x67\x6e\x48\xed\x81\x87\x66\x78\x21\xe0\xb7\x7a\x8d\x03\xd8\xa6\xa2\xeb\x49\x62\xe6\x64\xc2\x3c\xeb\x33\x26\x93\xb6\x75\xe9\xb2\x25\x2b\xcc\x80\x92\x9c\xb3\xcc\x9d\xee\x38\xf8\xbe\x8a\xa8\xa8\x31\x0a\xab\xf8\xa7\xaa\x10\x3a\xc9\xe9\xa6\x1d\x9b\x61\xdf\xb1\x79\x6a\xb2\x0c\xab\xda\x37\xce\xe6\xd8\x8c\xc4\x46\x32\x7b\xaa\x21\x89\x79\x6d\xbb\xf6\x7c\x60\x1a\x99\x60\xbc\xf6\xc9\x8a\xc0\x8a\x82\xba\xd1\x06\x66\x0b\x7e\x7d\x0e\xfb\x95\xed\x73\x33\xbb\x46\xf8\x3a\x27\xcd\x3a\x37\xad\xff\x23\xda\xc8\xde\xb4\xa7\xbc\xb6\x64\xf4\x04\xb2\x13\x39\xf0\xc1\x44\xfa\x90\xdd\x21\x36\x18\x38\x81\x81\xd6\x71\x21\x1d\xf3\x37\x69\xd3\x9b\x81\x74\xec\x36\x41\xf5\x0d\x8e\x19\xeb\x7b\x39\x30\x3c\xff\x35\xec\xdc\x64\x2b\x54\x73\xdb\x01\x35\xad\xcf\xa0\x8a\x7f\x39\xc7\x96\x65\x8f\xc7\xbf\xf0\x9b\xf3\x62\xfa\x89\xdb\x0b\x18\x72\x01\x4a\x0c\x6e\xe0\xa9\xe2\xb2\x2d\x78\xec\x31\x3e\x68\x56\x57\xc4\x5c\xc1\x3c\x56\x0c\x4e\xd4\xfa\x64\x9f\x58\xd0\xe7\xe7\x63\xe3\x6a\x55\xc5\xdb\x49\xd7\x29\xb4\x58\x40\x71\x4d\x7d\xa3\xbf\x2d\x00\x8a\x82\x42\xda\x67\x00\x41\xb0\x6c\x10\xa0\x77\xc1\x88\xf9\xfa\x80\x44\x74\xf7\xb7\xf0\xb1\x5a\xe1\x77\x0a\x51\x75\x30\xda\xd5\xd1\x11\x2c\x4b\xaf\x2a\x4d\x73\x78\x5a\xe4\x3b\x64\x77\x97\xec\x94\xf1\xbc\xa8\xd4\x8e\xb0\x06\xfd\x88\xe6\x21\x98\x68\x9b\x1f\xbf\x21\x9c\x5d\x4a\x1e\x2b\xec\x7f\xe8\x45\x0b\x99\x83\x95\xf7\x64\xdb\x59\x68\x6c\x4c\x5a\xf9\x1c\x0b\x6d\x1d\xee\x80\x6f\xa4\x00\x2f\xce\x21\x1e\xb8\xac\xd0\x1d\x6c\x22\x29\xc4\xa2\xd4\x26\xe7\xd5\x3b\xb5\x9b\xd2\x37\x0b\x5b\x67\xa6\x85\x10\x00\x7e\xeb\xdc\x2c\xab\x9e\x9f\xb6\x33\x7c\x86\xed\x4f\x7f\x04\xcc\xc2\x9c\x77\xc8\xc3\x2b\x42\x53\xbc\xe2\xac\x36\x6e\x26\xec\x4d\x09\x54\xa3\x85\x1d\x72\xd9\x3c\x35\xb5\x14\xd8\xb4\xac\x13\x34\x1f\xf0\x46\xaa\xd5\xbf\x35\xd3\x55\x21\xae\xd1\x31\x1e\x97\x81\x3e\xcd\x7a\x34\x89\x67\x37\xc0\xaa\x66\x87\xd6\x25\xcb\x68\xe3\x25\x60\x48\xe6\x94\xd0\xdd\xee\xee\x13\xd7\xd5\x05\x63\x3d\xbe\x65\x9c\xbb\xfa\x94\x6b\x70\x02\x2b\x67\xe5\x17\xb0\x3a\xf4\x42\xed\xb8\x31\xa6\x3b\x4b\x89\x8b\xb3\xfb\x4d\x53\x19\x12\x5e\x59\x94\xa1\x57\x4a\xdb\x9a\x94\x7c\x8d\xa7\x0e\x71\x39\xbc\x5a\xad\xf4\x10\xd0\xd3\xd4\x8b\xc2\x94\xb0\x66\x3c\xc2\x77\x36\xf7\x5a\xed\x4e\xec\xaa\x4e\x78\xbc\x7e\xf5\x16\x12\x23\x13\x02\x9e\x4d\xb7\x4e\xdf\xde\xba\xf9\xc4\x7c\xb5\x70\xd9\xde\x12\xb9\x8b\x5b\xfb\x51\x04\xd1\x17\x9d\x04\x2f\xbc\x81\xa5\x62\xaa\x83\x79\x52\x74\xae\x42\x8d\x05\x6d\xb9\x0c\x35\xd1\x07\x74\x43\xdb\x81\x50\xdf\xdc\xe1\x17\x05\xdd\xef\x3f\xf4\x1d\xa9\xbb\x8e\x6e\x97\xc7\x2a\x6a\xed\xd4\xb6\xbb\x71\x29\xf8\x4d\x18\xd1\x0e\x1e\x77\x73\xc6\xf3\x74\x69\x6f\x16\xcd\x0b\xdb\x1b\x0e\xdd\xe7\x1c\xce\x8f\x77\xc2\xdd\x0f\x07\x36\x42\xb8\xb1\xe8\x80\xf4\xc9\x88\x1c\x90\x68\x87\x94\x8c\xec\x64\x3b\xa4\xff\x00\xff\xbe\xe3\xba\xb0\x76\xd0\x10\xa5\xfd\xa1\x09\x7c\x10\x43\x47\xdd\x29\xef\xe6\x0c\x6c\xf2\x09\xdb\xd8\x47\x70\xb2\x87\xc1\x2c\xcd\xab\x11\xd4\x19\x86\x36\x73\x8b\x96\x4c\x63\x50\xfc\x38\x85\x68\xec\x67\x66\xae\xe1\xb9\xbb\x57\xc6\x2f\x09\xbe\xeb\x7b\xd8\x1b\x48\xb8\x78\x1f\x6a\xa5\x51\x82\x24\x40\x84\xb1\xc2\x8f\x9a\xba\x77\xce\x6e\x4a\xef\xd0\x17\x78\xf4\x1b\xfe\xda\xee\xab\x72\xce\xcb\xa3\x39\x9f\x7e\xd2\x37\x8c\xde\x35\x78\x3b\x03\xba\xab\x69\x1b\x5f\x5e\xd0\xb8\x0b\x2e\x4e\x53\x35\xb5\x8f\x7f\xaa\xf5\x86\x7e\x4f\xef\x26\xf2\x58\xe5\xe1\x40\xe2\x89\x18\xe9\xdc\x22\x34\xac\xf2\x8d\xbc\xa0\x5e\xc5\x45\x20\xa0\x50\x81\x05\xf9\x9e\xeb\xe9\x06\xbf\x6e\xea\x7c\xa8\xe1\xcd\xd9\x7b\xfc\xd5\xaa\xb3\xb9\xd1\xf9\xc6\xd6\x66\xc6\x7d\x10\x86\x2b\xb4\x23\x69\x09\xe2\xe7\x17\x5b\xab\xb7\x75\x3b\x87\xc7\xe7\x10\xba\xf9\xce\xb7\x4f\x1e\x62\xfc\x66\xa0\xb5\x51\xf3\xc5\x07\x98\x66\xd3\x26\x31\x52\xde\xd0\xa0\x5e\x47\x70\x96\x44\x66\x55\x26\xfc\x45\xdb\xf5\x95\x89\x46\x5d\xee\xd5\xff\xa4\xce\xf3\xe6\x35\xd3\x03\x59\x34\xc6\xe5\xa3\xf1\xd4\xdd\x2e\x48\xd6\x3e\xa3\x00\x9c\xd6\x71\xde\x02\xf7\xb1\x28\x1e\x21\x22\x08\xbc\x43\x04\xfb\x85\x10\x3d\x30\x4f\xfb\x80\x28\x31\x8f\x58\xae\x6e\x21\xcd\x33\x7d\x8f\xbe\x6f\xf9\x37\x11\x75\xaa\x68\x42\x17\x4a\xd3\x5d\xf2\xfb\xb6\x66\xb2\x05\xf6\x6e\x84\xdf\x66\xe1\xfa\x22\xdf\x6b\x88\x58\x55\x6b\x3d\xf8\x69\x1e\xe6\x5c\x51\x2c\xb4\x10\x0f\xda\x25\x46\xa6\x61\x34\x12\xf1\x4d\x31\x5b\x5a\x92\x20\x75\x1d\x84\x02\x23\x9c\x4a\x0f\x6c\x29\x1b\xba\x19\x6a\x96\x46\xa3\xf9\xc6\x10\x25\x8e\x6e\xef\x78\x60\xd7\xc4\x5f\x6b\x30\x2d\x06\x3b\xe0\x42\xad\x2b\x57\x1a\xa0\x51\xb7\xaa\x11\xee\x49\x5f\x3c\xae\x87\x60\x6b\x7e\x1d\xb6\x09\xba\xa6\xad\x96\x2a\x62\x05\xac\x3f\x9b\x58\x37\x4d\xaf\x74\x19\xae\xd5\x41\x61\xc7\xf8\x9c\x9a\xb6\x7f\xa2\xb3\x59\x01\xf9\x25\x93\x83\xa4\x89\xfe\x1b\x7b\xd5\xcd\x30\xfd\x7e\x5b\x60\x77\x72\xd4\x86\x49\x59\x70\xbe\x3d\xb5\x70\x23\x4b\xa0\xf9\x72\x64\xe3\xfc\xe7\x44\xa3\x30\x56\xf0\x58\x17\xb7\xac\xaa\xc3\x47\x80\x55\x3c\xd2\x59\x31\xd5\x9f\x39\xd9\xbb\xdd\xa8\x86\xda\xe2\xab\xff\x0b\x00\x00\xff\xff\x79\x23\x12\x5a\xb0\x2b\x00\x00")

func distVeloxMinJsBytes() ([]byte, error) {
	return bindataRead(
		_distVeloxMinJs,
		"dist/velox.min.js",
	)
}

func distVeloxMinJs() (*asset, error) {
	bytes, err := distVeloxMinJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dist/velox.min.js", size: 11184, mode: os.FileMode(420), modTime: time.Unix(1457958950, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"dist/velox.min.js": distVeloxMinJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"dist": &bintree{nil, map[string]*bintree{
		"velox.min.js": &bintree{distVeloxMinJs, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

