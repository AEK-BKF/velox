// Code generated by go-bindata.
// sources:
// dist/velox.min.js
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _distVeloxMinJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x3a\x6b\x53\xe3\xc6\x96\xdf\xf3\x2b\xe4\xae\x94\x4b\xba\xb4\x85\x99\x64\xee\xee\x5a\xd3\xb0\x84\x71\x12\x52\x04\xcf\x02\x73\x93\x2d\x86\x30\xc2\x6e\xb0\x32\xa2\xa5\x6d\xb5\x61\xbc\x58\xf9\xed\x7b\x4e\x3f\xa4\x96\x6d\xc8\xdc\xda\x54\xdd\x2f\x76\xab\x9f\xe7\xfd\xea\xde\xdd\x0d\x1e\x78\x5e\x7c\x0e\x06\xc1\xc3\x30\x7e\x15\xbf\x86\xc6\x5c\xa9\xb2\x1a\xed\xee\xde\x65\x6a\xbe\xb8\x89\xa7\xc5\xfd\xee\xef\x65\x96\xe7\x85\x4c\x77\xf5\xe4\xaf\x60\xd5\x4f\x69\x76\xcf\x83\x77\xa6\x3b\x78\x33\xe3\x0f\xff\xe9\x26\xe1\x8a\x7d\xd8\xe7\xe7\xe3\x8b\xe0\xa8\x28\x97\x32\xbb\x9b\xab\xe0\xd5\x70\xef\xef\x5f\xf5\x6e\x17\x62\xaa\xb2\x42\x84\xd1\x53\xdb\x56\xd1\x53\x76\x1b\xf6\x42\x32\x7e\xe0\x42\x9d\x17\x0b\x39\xe5\x24\x13\x81\x8a\xa2\xa7\x87\x54\x06\x9c\xed\xfe\x16\x7e\xa8\x56\x1f\x16\xc3\xe1\xe1\x30\xda\x59\xf9\x1f\x5f\xef\xde\x51\xc1\xfc\xbd\x5c\x3b\x30\x3b\xc7\xd7\x65\x91\xe7\x17\x00\xae\x64\x15\x57\xd8\x28\x16\x2a\xf4\x20\x29\xe2\x69\x9a\xe7\x61\x16\xd5\x54\x45\x75\xb3\xbc\x80\x21\x25\x97\x08\x5b\x16\x4b\x9e\xce\x96\xe7\x2a\x55\x9c\xb1\x2c\x3e\x3a\x99\x9c\x8f\xdf\x46\x92\xab\x85\x14\x09\xc2\xa8\x98\xe0\x8f\xc1\xaf\x3f\x9f\xfc\x08\xd4\x3b\xe3\xff\xb3\xe0\x95\x4a\x54\x5c\x94\x5c\x84\xe4\x87\xf1\x05\xa1\x59\xfc\xfe\xec\x84\xf6\x86\x11\x55\x31\xc0\x61\xe7\xfc\x08\xfb\x72\x19\x92\xc3\xe9\x94\x97\x8a\x50\xa2\xf8\x67\xb5\xcb\x91\x10\x83\x4a\xc1\xa9\xf7\x64\xfb\x82\xa3\x74\x3a\xe7\x83\xa3\x42\x28\x59\xe4\xb0\x4e\x14\x83\x29\x76\x3d\x33\xfd\xd7\x81\xed\xe0\xb3\xc1\x2f\xc0\x58\x58\xd1\x05\x16\xd6\x89\x45\x9e\xf7\x58\xd5\xef\x6f\xdb\xe0\x24\xad\xd4\x40\x33\x68\x70\xfc\x96\xd0\x2a\xa2\x73\x46\x08\x9c\xa5\x0c\x41\xd9\x6b\xfe\x2d\x7c\x15\x42\x53\xaa\x42\x4a\x4d\xe7\xa9\xb8\xe3\xcc\xa3\x34\x90\xf2\x1b\xc6\xd4\x3c\xab\x3c\x82\xae\x56\xdf\x6e\xf4\xf5\xfb\xaf\x86\x43\xdb\x8b\x7b\x2d\x2a\xe4\xe4\x1a\x13\x26\xa7\xa7\xe3\xa3\x8b\xe3\xd3\x1f\xfa\xfd\x2e\x87\xb2\x78\xf2\x6e\x7c\x0a\x14\x9f\x65\x55\x99\xaa\xe9\x5c\xc3\x1d\x12\xe4\x06\xa1\x4f\x6a\x59\xf2\x91\xf9\xa8\xa3\xc8\xb2\x8f\x90\x04\x99\xad\x1c\x24\x55\x59\x88\x8a\x5f\x00\x37\x56\x2b\x42\xea\x29\x6e\x13\x16\xd1\x53\x8d\xd3\xa7\x0c\x48\xb4\xb8\x01\x06\x85\xf3\x38\xe7\xe2\x4e\xcd\xa3\xb8\x2a\xf3\x0c\x0e\xf9\x20\x80\x94\x25\x23\xf7\xbc\xaa\xd2\x3b\x4e\x68\xce\x2e\xaf\xe8\x82\x0d\xe9\x2d\x1e\x72\x5b\xc0\x1a\xa6\x92\xc5\x9b\xa9\x5d\x99\x2c\x76\x76\x22\xa0\xcc\x2d\x9b\x5e\x2e\xae\xe0\xe8\x32\x4f\xa7\x3c\xe4\x94\xc0\x46\x40\x84\xdb\x38\x13\x33\xfe\x79\x72\x1b\x12\x2d\x17\x24\x8a\x4a\xe8\x74\xf3\x8c\xb0\x8c\x0e\x3e\x54\x7f\xdb\xc5\x25\x09\xcf\x2b\x1e\xc0\x7e\xdd\xa5\x20\xab\x72\x09\x4b\xf5\x3f\x2b\x53\x59\xf1\x63\xa0\x89\xb7\x8f\x1e\x69\xf7\x89\x68\x56\x9d\xa6\xa7\xa1\xee\x8e\x56\xab\x30\x65\xa6\xf9\xcc\x01\xb3\x54\xa5\xb0\x2a\x8f\xcb\x45\x35\xf7\xf7\xc5\x01\x6f\xdb\x67\x96\x67\xb3\x11\x0c\x56\x3e\x62\xd0\xf5\x67\x58\x65\x33\xbd\x08\x25\xb7\x99\x41\x08\x4c\xe9\xf7\x73\xc7\x18\x6d\x43\x66\x5a\x3f\x65\x98\xc7\xbf\x17\x99\xb0\x5c\xca\xe2\x85\xcc\x41\x94\x93\x75\x49\x29\xe9\x2c\x32\x7c\xf3\x18\x59\x6f\x13\x53\x11\xa6\x51\x6d\x4e\xf6\xfa\x7b\xad\x91\x00\xd9\xdc\x5c\x77\xb0\x2e\xaf\xad\x2c\x6f\x4a\x2d\x97\xb2\x90\x8d\xd8\x9a\xaf\x1a\xb4\x15\x4e\x8e\x46\xc3\x67\x60\x42\x5b\x06\x5a\x2c\x66\x61\x44\xb7\x5b\x3d\x15\xa7\x37\x85\x54\xa1\x9e\x69\x95\x18\x49\x72\xfd\x79\x2e\x99\x6a\x05\xfe\x8b\xe0\xa1\x9a\xc9\x45\x6c\x69\x55\x47\xb5\xd6\x93\x4c\x03\x47\x53\xf6\x7a\x38\xa4\x86\x4d\xda\x6c\x24\x68\xef\x51\xb1\x40\x83\x32\x71\x47\x7a\x0c\x37\x2b\x6e\xc1\xe4\xab\xb9\x2c\x1e\x03\x64\xd6\xf9\x52\xa8\xf4\xf3\x18\xf7\x0f\xc9\x69\xa1\x02\x2e\x8a\xc5\xdd\x3c\x48\xe5\xdd\xe2\x1e\x20\xa9\x40\x2a\x34\xee\x60\x57\x99\xa2\x6b\x64\x30\x64\xf1\xe8\xaa\xbf\x3d\x5f\xa0\x81\x31\x9d\x88\xb1\xfe\x04\x93\x5f\x27\x22\x2e\x65\xa1\x0a\x84\x88\x3d\x4d\xf3\xa2\xe2\x23\x9f\x6c\x5b\x8f\xd1\xac\xa6\xd3\x9c\xa7\x12\xb4\x8a\xcb\x87\x34\x0f\xd7\x0e\x8c\xda\xc3\x5a\xca\xb7\xf0\x8d\x86\x14\x8d\xd6\x68\x8f\x9a\xcd\x46\xaf\x68\x87\xee\x2d\x0c\x8a\x72\x23\xd3\x42\x1f\x7e\x49\xae\xc9\x8e\xda\x21\x3f\xa6\x62\x96\x73\x59\x91\x2b\xa4\xae\x88\xd0\xd0\xe0\x2c\xc9\x86\x89\x7c\x23\x9c\xb1\x91\x60\x6c\xc4\xa5\xbc\x32\x3e\x4f\xb3\x87\x1b\x3a\x5e\x92\x42\xc0\x4e\x57\x60\xff\xbd\xaf\xce\xbc\x9a\xa6\xb3\x99\x06\xe7\x24\x03\x57\x22\xb8\x5c\x03\x6b\x3b\x40\x60\x3c\xb6\x0f\x80\x86\x19\xb2\x6c\x0e\x19\x33\x82\x47\x4a\x7e\x5f\x3c\xf0\x97\x4e\xfd\x67\x88\xe1\x08\x31\xd8\x4b\xe4\x3e\x90\x66\x30\x90\x68\x7c\x91\x24\x8c\x31\xd8\x4c\x68\x43\x0e\xf6\x47\xd2\xbd\x28\xb9\x01\x56\x7f\xaa\x6b\x5a\x08\x2d\xe8\x23\x23\x26\xc2\xca\xb9\xfb\x44\x5f\x62\xda\xad\x64\x00\x43\x41\x30\x47\xe0\x3b\x12\x73\xb2\x0f\x33\x15\x56\x92\x50\x6f\x9c\xf0\x16\x10\x29\x65\x82\x71\xf3\x95\x83\xc3\xd5\x48\x1f\x83\xed\xd2\x3e\x28\x91\xbe\x64\x6a\x8d\x33\x42\xac\x15\xb1\xf5\x37\xed\x42\x38\x9d\x9a\x5d\x11\x0e\x4a\xee\x8b\xd9\x22\x37\xb1\x15\xd8\x25\xf3\x15\xf3\xcf\x25\x48\x23\x68\x27\x46\x0e\x5e\x08\xc6\x44\x5d\x6b\xbe\x59\x17\x49\xad\xb0\x5f\x5f\x83\x53\x04\xcb\x52\xad\x56\x5d\x36\x78\x81\x97\xc5\x6e\x0a\x3e\x54\xc9\xc5\x54\x15\x68\x52\x1a\x26\x04\x00\x00\x8f\x78\x3c\x4f\xab\xc9\xa3\x78\x27\x81\x7c\x52\x2d\x43\x19\x01\x50\x0a\x19\xc1\xe1\x27\xea\x28\x22\x6f\xdb\x00\x65\xdb\x8f\x86\x42\xd4\x10\x01\x6a\x3b\x91\xf4\xb6\x06\x82\xd2\xc0\x57\x3d\x66\x68\xd3\x1a\x53\xf3\x34\x4d\x2b\x4e\x16\xe0\x4b\x6e\x33\xc1\x67\x64\xa4\xbf\x6f\x8a\x02\xd4\x58\xd8\x2f\x6b\xa0\xcc\x87\x58\xdc\xdf\x70\x49\x46\x26\xee\x83\xa0\x01\x04\x26\xd1\x23\xc5\xcd\xef\x7c\xaa\xc8\x08\x25\x09\x58\x02\x03\xca\x46\x87\x81\xfd\xe6\x28\x88\xd3\x10\x63\x5a\x34\x7e\x53\x10\xed\xd5\x4a\x59\x61\x04\x7f\xc1\x9d\xbb\x32\xcb\x7a\x7b\x89\x23\x97\x80\xd0\xa1\x60\x6e\x6a\x52\xec\x8b\x44\x98\x88\xa1\x07\x88\x5d\x8a\x2b\xca\xe1\x27\x6a\x17\xda\xc6\xd0\x9a\xe0\x12\x8e\x02\x13\x9c\xb9\x0d\x60\x61\x09\x70\xb4\x47\xa7\x5b\xcf\x4c\xd2\x2f\x3e\x28\x01\x0a\xa6\x8b\x5c\x8d\xdc\x48\xed\x47\xd1\xc8\x09\xbb\x2d\xc8\x3d\x20\x23\x5b\x64\x24\x9c\x11\x3d\x81\x60\xc5\x10\x2c\xca\xa3\x62\xc6\x0f\x15\xa8\x6b\x62\x12\x02\xbe\xcf\xbe\xfd\xf7\x7e\xff\xf5\xbf\xed\x83\x62\xb6\xc7\x02\x50\x75\xdd\x20\xd9\x9c\x94\x39\xc5\x6a\xe4\x8c\x66\x80\x77\x6f\x0f\x3c\xcf\x10\xdc\x8e\xa3\x70\x32\xdf\xaf\xe0\x50\x09\x52\x56\x5d\xd1\x6a\x67\xa7\xc1\xba\x64\xa0\x61\xa9\x9a\xa3\xb6\xd1\x07\x56\xba\x90\x6e\x17\x62\x85\x25\x68\xe9\x98\xed\xd1\x3b\xf6\x60\xf7\xa1\x13\xf6\x50\x64\xb3\x60\x98\x24\x9a\xa7\x19\x7b\xb8\x1c\x5f\x51\xd1\xef\x9b\x6e\x60\xfa\x04\x04\xba\xf9\x58\x5e\x66\x57\x07\xb0\x26\xae\xb4\x79\x19\xd2\x71\x64\x83\x11\xd8\x7f\x34\x66\xec\x6e\xb0\x07\xf3\x27\x16\x88\x88\x9a\x95\x3d\xbd\x8d\x56\x27\xf0\x2a\x19\xa8\x3d\x40\x2b\x69\x35\xd8\xa3\x8a\x4e\x20\x4c\x1b\xef\xec\xd0\xe6\x90\xac\xdf\x1f\xef\xb3\xbb\xe8\x29\x65\xb7\x97\x12\xf2\x0f\x6b\xc0\x25\x5d\x02\x35\x94\x33\x68\x5a\x16\x97\x46\x16\xc9\x80\xe0\xc2\x28\x63\x4b\x47\x21\x0c\x68\x70\x08\x70\xe9\x15\x90\x18\x79\x5e\x79\x06\x69\xda\xe7\x12\x84\x9d\xcf\x82\x54\x04\x0b\x51\x65\x77\xa0\x3c\xc1\x0d\xa8\xc1\x60\x6f\x08\xaa\xad\xf8\x1d\x97\x01\xc0\xba\xe0\x34\xb8\x4f\x3f\x81\xfe\x04\x6a\xce\xf5\x6a\xc9\x6f\xb9\xe4\x62\x0a\x0b\xf4\x04\x3d\x90\x4a\x99\x2e\x03\x9e\x73\xf4\xea\x01\x28\xe9\x5c\x77\xff\x2f\x97\xc5\x00\xb7\x9d\x05\x3a\xde\x83\x94\x05\x3c\xe4\xd9\xe1\xc5\xf1\xe4\xf4\xfa\xdd\xe1\xc5\x8f\xd7\xc7\x27\x27\xe3\x1f\x0e\x4f\xae\x0f\xcf\xce\x0e\xff\xfb\xfa\xf8\xf4\xed\xf8\x57\xa2\x09\x63\x28\x48\x25\x44\x76\x6d\xa8\x9b\xd1\xbd\x61\x84\x98\x1b\x02\x19\xf4\x08\x38\x34\x44\x1f\x49\xd5\xef\x67\xfb\x8e\x04\x5d\x8c\x2f\x00\x9c\x0a\x90\xce\x6e\x33\x07\x4d\xf0\xf3\xfb\xf3\x8b\xe0\x74\x72\x11\xdc\xf0\xe0\x0e\x88\x0a\x5e\x1f\xc0\x06\x92\x68\x5c\xb5\xa5\x08\xc0\xcc\x58\xb4\x2a\xb4\x79\x0d\xb2\x1d\x54\xfe\x71\x78\xf2\x7e\x7c\x3d\x79\x7f\x71\x3d\xf9\xfe\xfa\xbb\xc9\xfb\xd3\xb7\xe7\xeb\x58\xa4\x6c\xf1\x02\x33\x6b\x17\xf9\x02\xf3\x07\x7b\x3d\xd0\xf4\x26\x3e\xfe\x83\xa0\x4d\xcd\x58\xd6\x46\xd5\x7f\xec\x41\xc6\x8c\x22\xe7\x75\x0d\xb1\xeb\x0f\x8c\xf9\x9d\xf0\xe4\x2f\x0b\x4f\x6f\x09\xd6\x13\x8c\x3b\x98\xca\xf8\x31\x95\x02\x78\x1c\x92\x0a\x3c\xcf\x9c\x6b\x4c\x8d\x3d\x0c\x3e\xf1\x65\x15\x08\x08\xdd\xaa\x45\x89\x4e\x06\x8c\xac\xdb\x64\xa9\xf5\xc1\xe9\x71\x90\xb6\x7a\x9c\xda\x82\x40\x23\xd3\xce\x94\x82\xa1\x41\x71\x35\x14\x64\x4d\xc8\x08\xda\x6a\xcd\x6f\xdb\xd7\x38\x7c\xae\xe9\x8e\x36\x0c\xb6\xbd\xe4\xad\xf5\x1a\x26\x8d\xb1\x6a\x4e\xae\x20\xe9\x12\x54\xd2\xc2\xe8\x85\xdd\xb5\x09\x4e\x21\x53\x75\xc6\x7c\xb5\x42\x03\xde\x15\x92\x09\x78\xb1\xd4\x58\x22\x83\x74\xea\xe8\xd0\x61\x37\x88\xcc\xf5\xe1\xe9\xf5\xe4\xbb\x9f\x20\xf0\x23\x70\x1e\xd7\x72\x0a\x34\xcd\x2f\x39\xd2\xfc\xb9\x5d\x3f\x16\xe5\xc7\xa0\xb4\xce\xd2\x9d\x01\x71\x09\x4a\x59\xe1\x66\x55\x81\xf5\x66\x88\xf7\xd9\xf7\x47\x83\xbf\xff\xc7\xf0\x55\xe7\xfc\xc9\x3b\xd0\x14\x90\x39\xcc\xe2\xdb\xc3\x37\x22\x71\x6e\x8c\xd0\x73\xb0\xe0\xe0\x26\x34\x69\x60\xb7\xd9\x54\xd5\xcd\x23\x43\x82\x71\x1d\x2a\x1f\xa2\x0d\x5c\x9c\x16\xe5\xd2\x7d\x82\xd8\x6e\x01\xe9\x56\x16\xf7\xcf\x82\x84\x83\x9b\x20\x95\x90\xca\xa3\x59\x09\xd3\x12\xc3\xba\xf4\x26\xd7\x22\xf1\x11\xcf\xfe\x08\x2c\x9a\x05\x1f\xf1\xdc\x8f\x1e\x09\xa3\x0e\xf8\xdf\x9f\x4d\x7e\xbe\x3e\x1b\xff\xd7\xfb\xe3\xb3\xf1\x1a\xfc\xd6\x76\x58\xf0\xad\x3a\x79\x3d\x0a\xeb\x2a\x2d\x42\x8d\x40\xf3\x58\x1b\xbf\x67\x31\xd1\xa3\x5f\x8e\x0a\x80\xf1\x91\x06\x1f\xed\xf9\x16\x29\x3c\xfb\x79\xa4\x8c\xcd\xf9\x4b\xb0\x4a\x43\x87\xce\xbf\x1c\x9f\xa3\xc3\x53\xd4\x2e\x48\xaa\x2e\x0e\x8f\x4f\xaf\xc1\x92\x8e\xbf\x3f\x3e\xed\xe2\xa7\xa3\x7d\x8b\xa3\xc6\xe0\xc9\x44\x49\x46\xde\x3d\x8f\xef\xbc\x7c\xc5\x8a\xcd\x5e\xdc\x29\x03\xcf\x5c\xed\x80\xcb\xd6\x8d\x2e\xf2\x47\xa9\xd0\x18\x72\x09\x86\xe8\x1e\x2d\x81\xc6\xaa\x85\x3f\x48\x95\x76\x07\x33\x5e\x65\x12\xb4\x15\x0f\xdf\xd4\x1a\x8b\xd0\xe1\xdb\x06\x85\xc6\xd6\x6f\x61\x8c\x49\x94\xbc\x8e\xeb\x3b\xde\x72\x0a\x4d\x9a\x41\x12\xc0\x2d\x5e\x04\x17\x01\xeb\x40\x9a\x6a\xf8\xd0\xbd\xa9\x60\x56\x70\xc3\x3e\xfe\x19\xb2\xb1\x4d\x98\xdf\x9f\x9e\x8d\xcf\x27\x27\xff\x38\xfc\xee\x64\xbc\x09\xf5\x4b\x2a\xaf\x39\x31\x67\x4f\x45\x39\x32\xa0\x53\x3c\x75\x64\xd4\x9e\x6a\x21\x1a\x19\x1d\xaa\x69\x09\x21\xa3\x0d\x87\x78\x78\x39\xbf\xb2\xdc\x05\x1f\xfe\x22\x3c\x70\x54\x19\x8b\xf4\x9e\xff\x13\xf8\xe3\xe9\x5f\x4a\x01\x6d\x2c\xb6\x52\xa0\xf5\x32\x73\x9b\x2a\x9b\xd2\x72\x4f\xe7\x04\x1d\x68\xde\x61\xd2\x1f\x54\x58\x7f\x85\x48\x29\xb8\x5f\x54\x0a\x83\x0c\x10\x22\x17\x3c\x9c\x83\xe2\x8e\x4f\x8f\xc6\xce\x99\xe8\x00\x88\x68\x0a\x40\x5e\xc5\x7e\x3a\x9f\x9c\xc6\x3a\xee\x09\x75\xd3\x18\xd2\xec\x76\x89\x3e\x8b\x66\x7e\x4a\x0f\x31\x64\x6f\x68\xab\x6b\x7e\xf0\x2f\xde\x34\x31\x3a\xe6\x00\x6b\xe1\xa7\x4e\x06\x44\x64\x8b\x44\x52\xcb\x16\x66\x75\x95\x4a\x01\x62\x30\xd5\x33\x97\xfd\xc8\xc4\xa0\x26\x6b\x1d\x36\xa8\x18\x75\x7d\x69\x58\x3d\x05\x2e\x7a\x95\x15\xbb\x62\xa2\x5d\x66\x8c\xa1\xc3\x81\xd7\x1e\xf9\x99\x9d\xb9\x15\xb8\xbc\x6a\xf3\x15\xe3\xe6\xd5\x7a\x4a\x29\xc0\x40\x71\x53\x4a\x80\xac\xc2\x9e\xc0\x21\xaf\xc5\xf2\xde\x13\xa8\xe4\x5a\x25\xc1\x65\x76\x10\x29\x30\x87\x33\x84\xb1\x90\x66\xd8\x32\xc4\xf6\xf9\x33\x88\xf2\x14\xd7\xcb\xec\x5c\xad\x9b\x5f\xbe\xf9\xc6\xd6\x98\xc7\x98\xb2\xc1\xba\x3a\xe8\x95\x28\x93\xb5\xc3\x27\x0b\x05\xc5\x84\x99\xea\x86\x9e\x6f\x4d\xc1\xfa\x8a\xce\x1c\xb4\x81\xde\x04\x1d\x6b\x1a\x25\x93\x06\x32\x9c\x8e\xc0\xa1\x92\xfe\x95\xc0\x7d\xf1\xc1\x68\xf3\xb7\xd3\x50\xea\x60\x8e\xb6\x54\x8c\x6a\x8a\x60\x6c\x29\x47\x99\x71\x86\xf3\xeb\x9a\x2e\x5e\xe2\xba\xab\xfc\x70\x3a\xf4\xb7\xfe\x53\xf6\x7b\x0b\xf7\xa2\xff\x87\x00\xe4\x31\xfe\x19\x7a\xe7\x31\xfe\x19\x12\xe4\x31\xfe\x19\x04\xf3\x18\xff\x6a\x7a\xbb\x8e\x08\xe4\xbd\xb1\x01\xd2\xd3\x6f\x88\xd9\xbb\x91\x70\x8b\x55\xdb\x5c\x57\x1a\x6e\xea\x30\x1d\x20\x31\x74\x6e\x0b\x0b\x9b\xd4\xf0\x72\xfc\x67\x54\x11\x77\xcd\xb7\x40\x88\xe5\x47\x7f\xe3\x75\xc2\x35\x64\xc3\xfc\xfe\x39\xe9\xc6\x96\x91\x6e\xf5\xa7\x42\xd6\x22\xe5\xe4\xec\x45\xe2\x6f\x81\x64\xcd\xa8\xaa\x08\xdc\xca\x7a\xdf\x0b\x92\xd9\x95\xcb\xba\x4e\xa6\xec\x10\x0d\x7b\x9c\x55\xfa\xff\xa0\xf3\xb5\x0d\x00\xa5\x4d\x1a\xf8\x3a\x5b\x91\x6a\x13\x1f\x6b\xb4\xb1\xa6\xaf\x2d\x2d\xcb\x12\x73\xfd\xf1\xcc\x0d\xa9\x4d\x78\x68\x86\x17\x02\x7e\xa9\xd7\x28\x80\x2d\x2a\xba\x9a\x24\x7a\x4e\x26\x4c\x5b\xe7\x98\x4c\xda\xd2\xa5\xf3\x96\xac\x30\x1d\x4a\x72\xce\x32\x97\xdd\x71\xd0\x7d\x15\x51\x51\xa3\x15\x56\xf1\x4f\x55\x21\xb4\x93\xd3\x45\x3b\x36\xc3\xba\x63\xd3\x6a\xbc\x0c\xab\xda\x2f\xce\xe6\x58\x8c\xc4\x42\x32\x7b\xaa\xc1\x89\x79\x65\xbb\x36\x3f\x30\x85\x4c\x10\x5e\xdb\xb2\x24\xb0\xa4\xa0\xae\xb7\xd9\xb3\xdd\x7e\x7d\x0c\xeb\x95\x6d\xbb\x19\x5d\x03\x7c\x1d\x93\x66\x9e\x1b\xd6\xff\x11\x6d\x68\x6f\xca\x53\x5e\x59\x32\x7a\x02\xda\x89\x1c\xf0\x60\x22\x7d\xc8\xee\xf0\x34\xe8\x38\x81\x8e\x56\x71\xc1\x1d\xf3\x37\x69\x53\x9b\x01\x77\xec\x16\x41\xf4\x0d\x8a\x19\xeb\x7b\x39\x10\x3c\xff\x33\xec\xdc\x64\x2b\x64\x73\x5b\x01\x35\xa5\xcf\xa0\x8a\x7f\x39\xc7\x92\x65\x8f\xc7\xbf\xf0\x9b\xf3\x62\xfa\x89\xdb\x0b\x18\x72\x01\x4c\x0c\x6e\xa0\x55\x71\xd9\x06\x3c\x36\x8d\x0f\x9a\xd9\x15\x31\x57\x30\x8f\x15\x83\x8c\x5a\x67\xf6\x89\xdd\xfa\xfc\x7c\x6c\x54\xad\xaa\x78\x3b\xe8\x2a\x85\xf6\x14\x60\x5c\x13\xdf\xe8\xb7\x05\x00\x51\x50\x48\xdb\x86\x2d\x08\x86\x0d\x02\xf8\x2e\x18\x31\xaf\x0f\x48\x44\x77\x7f\x0b\x1f\xab\x15\xbe\x53\x88\xaa\x83\xd1\xae\xb6\x8e\x20\x59\x7a\x56\x69\x8a\xc3\xd3\x22\xdf\x21\xbb\xbb\x64\xa7\x8c\xe7\x45\xa5\x76\x84\x15\xe8\x47\x14\x0f\xc1\x44\x5b\xfc\xf8\x0d\xf7\xd9\xa5\xe4\xb1\xc2\xfa\x87\x9e\xb4\x90\x39\x48\x79\x4f\xb6\x95\x85\x46\xc6\xa4\xa5\xcf\xb1\xd0\xd2\xe1\x12\x7c\x43\x05\xf8\x70\x0a\xf1\xc0\x65\x85\xea\x60\x1d\x49\x21\x16\xa5\x16\x39\x2f\xde\xa9\xdd\x90\xbe\x59\xd8\x3a\x32\x2d\x84\x80\xed\xb7\x8e\xcd\xb2\xea\xa5\xe1\xcd\xcb\x77\x3b\x64\x17\xf1\x19\x56\x46\xfd\x1e\x90\x18\x93\x0a\x91\x87\x57\x84\xa6\x78\xfb\x59\x6d\x5c\x5a\xd8\x4b\x14\x08\x54\x0b\xdb\xe5\x1c\x7d\x6a\xc2\x2c\x10\x77\x59\x27\x28\x59\xa0\xa8\x54\x4b\xc6\x56\x27\x58\x85\x38\x47\x9b\x7f\x9c\x06\xac\x36\xf3\x51\x5a\x9e\x5d\x00\xb3\x9a\x15\x9a\xcd\x2c\xa3\x8d\x02\x81\x8c\x99\x04\xa2\xbb\xdc\x5d\x35\xae\x73\x12\xfa\x7a\x7c\x4b\x3f\x77\xa1\x2b\xd7\xdb\x09\x0c\xaa\x95\x1f\xdb\x6a\xab\x0c\x61\xe5\x46\x9f\x2e\x3a\x25\xce\x04\xef\x37\xf5\x66\xf0\x85\x65\x51\x86\x5e\x94\x6d\xc3\x55\xf2\x35\x26\x24\xe2\x72\x78\xb5\x5a\xe9\x2e\x80\xa7\x09\x25\x85\x89\x6e\x4d\x7f\x84\xdf\x6c\xee\x55\xe1\x1d\xd9\x55\x9d\xf0\x78\xfd\x56\x2e\x24\x86\x26\x04\x94\x9e\x6e\x1d\xbe\xbd\x75\xe3\x89\x79\xd0\x70\xd9\x5e\x20\xb9\x3b\x5d\xfb\x5e\x82\xe8\x3b\x50\x82\x77\xe1\x80\x52\x31\xd5\x76\x3e\x29\x3a\xb7\xa4\x46\x82\xb6\xdc\x93\x1a\xc3\x04\xbc\xa1\x6d\x47\xa8\x2f\xf5\xf0\xb1\x41\xf7\x69\x88\xbe\x3e\x75\x37\xd5\xed\xf4\x58\x45\xad\x9c\xda\x4a\x38\x4e\x05\x95\x0a\x23\xda\x39\xc7\x5d\xaa\xf1\x3c\x5d\xda\x4b\x47\xf3\xc1\xf6\x86\x43\xf7\xd2\xc3\xa9\xf8\x4e\xb8\xfb\xe1\xc0\x1a\x0f\xd7\x17\x1d\x90\x3e\x19\x91\x03\x12\xed\x90\x92\x91\x9d\x6c\x87\xf4\x1f\xe0\xdf\xd7\x69\x67\xf1\x0e\x1a\xa0\xb4\x3e\x34\x36\x11\xcc\xeb\xa8\x3b\xe4\x5d\xaa\x81\x4c\x3e\x61\x85\xfb\x08\x92\x7e\xe8\xcc\xd2\xbc\x1a\x41\x08\x62\x60\x33\x17\x6c\xc9\x34\x06\xc6\x8f\x53\x30\xd4\xbe\xd3\xe6\x7a\x3f\x77\x2d\xcb\xf8\x25\xc1\x6f\x7d\x45\x7b\x03\xbe\x18\xaf\x4a\x2d\x35\x4a\xa0\x04\x90\x30\x56\xf8\xde\xa9\x7b\x1d\xed\x86\xf4\x0a\x7d\xb7\x47\xbf\xe1\xdf\xda\x75\x55\xce\x79\x79\x34\xe7\xd3\x4f\xfa\xf2\xd1\xbb\x21\x6f\x47\x80\x77\x35\x6d\x4d\xcf\x0b\x1c\x77\xc6\xc5\x71\xaa\xa6\xb6\xf9\xa7\x5c\x6f\xe0\xf7\xf8\x6e\x2c\x8f\x65\x1e\x76\x24\x1e\x89\x11\xce\x2d\x44\xc3\x04\xc0\xd0\x0b\x42\x59\x9c\x04\x04\x0a\x15\x48\x90\xaf\xb9\x1e\x6f\xf0\xe1\x53\xe7\x0d\x87\x37\x66\xaf\xf8\x57\xab\xce\xe2\x86\xe7\x1b\x4b\x9b\x11\xf7\x56\x0c\x67\x68\x45\x72\x32\x6b\x9e\x35\xb5\x44\xc5\xc7\x1a\x5b\x63\xbd\x75\xd1\x87\xe6\x73\x30\xb8\xf1\xce\x4b\x29\x0f\x16\x7c\x61\xd0\x8a\xad\x79\x1f\x02\xd2\xda\x14\x55\x0c\xe1\x37\x98\xaa\xe7\x11\x1c\x25\x91\x99\x95\x09\x7f\xd2\x76\x16\x66\xa2\xe1\xa0\xfb\xf4\x1f\xe0\x79\x0a\xbe\x26\x8d\x40\x8b\x46\xde\xfc\x63\x3c\x09\x68\x27\x24\x6b\x8f\x2e\xe0\x4c\xab\x4b\x6f\x01\xfb\x58\x14\x8f\x40\x70\x81\x37\x8e\x20\xd2\x60\xb5\x07\xa6\xb5\x0f\x07\x25\xa6\x89\xc1\xed\x16\xd0\x3c\x6d\xf0\xe0\x7b\xcd\xbf\x89\xa8\x63\x45\x63\xcd\x3c\x5e\x6e\xa9\x53\xf4\x7a\x5d\xc7\x0b\xe0\x18\x8a\xe3\x4d\x68\x23\xcf\x82\xc9\x7e\x5f\x3e\x2b\x9a\xb2\xcb\x53\x5f\x34\x91\xab\xab\x95\x7c\x46\x28\xe4\x8b\xc2\xd0\x1b\x8e\x40\x53\x51\x62\x05\x26\x7d\xdd\x00\x41\x74\x83\x89\xb5\xe1\x68\x2d\x9e\x38\xe8\x06\x2d\xa1\xb5\x82\x7e\xa4\x12\xe2\xbb\x24\x6c\xbb\xf7\x13\xbe\xae\x1a\x6f\x8b\x65\x31\xe1\x57\xb0\xb8\x7e\x23\xe1\xd5\x9a\xac\x5e\x68\x12\xfa\x11\x14\x8c\xb9\x7c\x43\x68\x89\x3b\x68\xa7\x18\x01\x04\x90\x44\x7c\x53\xcc\x96\x96\x7f\xe0\xfa\x0f\x42\x81\x1e\x42\xa5\x07\x36\x4b\x08\xdd\x08\x35\x53\xa3\xd1\x7c\xa3\x8b\x12\x07\xb7\x97\x79\xd9\x39\xf1\xd7\x7a\x9b\xf6\x04\xdb\xe1\xd4\xde\x45\x82\xcd\xa6\x51\x37\x60\x14\xae\xa5\xef\x74\xd7\x5d\x98\xd5\xd5\x0e\xda\x04\x4d\x9b\x0d\x44\x2b\x62\x09\xac\x5f\xa4\x6c\xe8\xb1\x6f\x72\x68\x87\x30\x66\xd5\xf6\xd7\x4e\x5b\x96\x69\x88\xfe\xc6\x5e\x75\xdd\x6f\xbf\xdf\x26\x26\x1d\x07\xbe\xa1\x5c\x56\x1e\x7c\xcd\x6a\xf7\x75\x42\x62\x5e\xdc\x6c\xe4\xcd\x5b\xc0\x71\xa4\x50\x68\x48\x79\xac\xf3\x04\x56\xd5\xe1\x23\x6c\x5f\x3c\xd2\x59\x31\xd5\x2f\xc6\xec\x35\x79\x54\x43\x2c\xf6\xd5\xff\x05\x00\x00\xff\xff\x68\xc1\xfd\x48\xfb\x2c\x00\x00")

func distVeloxMinJsBytes() ([]byte, error) {
	return bindataRead(
		_distVeloxMinJs,
		"dist/velox.min.js",
	)
}

func distVeloxMinJs() (*asset, error) {
	bytes, err := distVeloxMinJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dist/velox.min.js", size: 11515, mode: os.FileMode(420), modTime: time.Unix(1458117710, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"dist/velox.min.js": distVeloxMinJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"dist": &bintree{nil, map[string]*bintree{
		"velox.min.js": &bintree{distVeloxMinJs, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

