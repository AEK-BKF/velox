// Code generated by go-bindata.
// sources:
// dist/velox.min.js
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _distVeloxMinJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x5a\x7b\x53\xe3\xc6\x96\xff\x3f\x9f\x42\xee\x4a\xb9\xa4\x4b\x5b\x98\x49\xe6\xee\xae\x35\x0d\x4b\x18\x27\x21\x45\xf0\x2c\x30\x37\xd9\x62\x08\x23\xec\x06\x2b\x23\x5a\xda\x56\x1b\xc6\x8b\x95\xcf\xbe\xe7\xf4\x43\x6a\xd9\x86\xcc\xad\x4d\xd5\xfd\xc7\x96\xfa\x79\x1e\xbf\xf3\xea\xd6\xee\x6e\xf0\xc0\xf3\xe2\x73\x30\x08\x1e\x86\xf1\xab\xf8\x35\x3c\xcc\x95\x2a\xab\xd1\xee\xee\x5d\xa6\xe6\x8b\x9b\x78\x5a\xdc\xef\xfe\x5e\x66\x79\x5e\xc8\x74\x57\x0f\xfe\x0a\x66\xfd\x94\x66\xf7\x3c\x78\x67\x9a\x83\x37\x33\xfe\xf0\x9f\x6e\x10\xce\xd8\x87\x75\x7e\x3e\xbe\x08\x8e\x8a\x72\x29\xb3\xbb\xb9\x0a\x5e\x0d\xf7\xfe\xfe\x55\xef\x76\x21\xa6\x2a\x2b\x44\x18\x3d\xb5\xcf\x2a\x7a\xca\x6e\xc3\x5e\x48\xc6\x0f\x5c\xa8\xf3\x62\x21\xa7\x9c\x64\x22\x50\x51\xf4\xf4\x90\xca\x80\xb3\xdd\xdf\xc2\x0f\xd5\xea\xc3\x62\x38\x3c\x1c\x46\x3b\x2b\xff\xe5\xeb\xdd\x3b\x2a\x98\xbf\x96\x7b\x0e\xcc\xca\xf1\x75\x59\xe4\xf9\x05\x90\x2b\x59\xc5\x15\x3e\x14\x0b\x15\x7a\x94\x14\xf1\x34\xcd\xf3\x30\x8b\x6a\xaa\xa2\xba\x99\x5e\x40\x97\x92\x4b\xa4\x2d\x8b\x25\x4f\x67\xcb\x73\x95\x2a\xce\x58\x16\x1f\x9d\x4c\xce\xc7\x6f\x23\xc9\xd5\x42\x8a\x04\x69\x54\x4c\xf0\xc7\xe0\xd7\x9f\x4f\x7e\x04\xe9\x9d\xf1\xff\x59\xf0\x4a\x25\x2a\x2e\x4a\x2e\x42\xf2\xc3\xf8\x82\xd0\x2c\x7e\x7f\x76\x42\x7b\xc3\x88\xaa\x18\xe8\xb0\x63\x7e\x84\x75\xb9\x0c\xc9\xe1\x74\xca\x4b\x45\x28\x51\xfc\xb3\xda\xe5\x28\x88\x41\xa5\x60\xd7\x7b\xb2\x7d\xc2\x51\x3a\x9d\xf3\xc1\x51\x21\x94\x2c\x72\x98\x27\x8a\xc1\x14\x9b\x9e\x19\xfe\xeb\xc0\x36\xf0\xd9\xe0\x17\x50\x2c\xcc\xe8\x12\x0b\xf3\xc4\x22\xcf\x7b\x2c\xed\xf7\xb7\x2d\x70\x92\x56\x6a\xa0\x15\x34\x38\x7e\x4b\x68\x1a\xd1\x39\x23\x04\xf6\x52\x46\xa0\xec\x35\xff\x16\xde\x0a\xa1\x25\x55\xa1\xa4\xa6\xf3\x54\xdc\x71\xe6\x49\x1a\x44\xf9\x0d\x63\x6a\x9e\x55\x9e\x40\x57\xab\x6f\x37\xda\xfa\xfd\x57\xc3\xa1\x6d\xc5\xb5\x16\x15\x6a\x72\x4d\x09\x93\xd3\xd3\xf1\xd1\xc5\xf1\xe9\x0f\xfd\x7e\x57\x43\x59\x3c\x79\x37\x3e\x05\x89\xcf\xb2\xaa\x4c\xd5\x74\xae\xe9\x0e\x09\x6a\x83\xd0\x27\xb5\x2c\xf9\xc8\xbc\xd4\x51\x64\xd5\x47\x48\x82\xca\x56\x8e\x92\xaa\x2c\x44\xc5\x2f\x40\x1b\xab\x15\x21\xf5\x14\x97\x09\x8b\xe8\xa9\xc6\xe1\x53\x06\x22\x5a\xdc\x80\x82\xc2\x79\x9c\x73\x71\xa7\xe6\x51\x5c\x95\x79\x06\x9b\x7c\x10\x20\xca\x92\x91\x7b\x5e\x55\xe9\x1d\x27\x34\x67\x97\x57\x74\xc1\x86\xf4\x16\x37\xb9\x2d\x60\x0e\x53\xc9\xe2\xcd\xd4\xce\x4c\x16\x3b\x3b\x11\x48\xe6\x96\x4d\x2f\x17\x57\xb0\x75\x99\xa7\x53\x1e\x72\x4a\x60\x21\x10\xc2\x6d\x9c\x89\x19\xff\x3c\xb9\x0d\x89\xc6\x05\x89\xa2\x12\x1a\xdd\x38\x03\x96\xd1\xc1\x87\xea\x6f\xbb\x38\x25\xe1\x79\xc5\x03\x58\xaf\x3b\x15\xb0\x2a\x97\x30\x55\xff\xb3\x32\x95\x15\x3f\x06\x99\x78\xeb\xe8\x9e\x76\x9d\x88\x66\xd5\x69\x7a\x1a\xea\xe6\x68\xb5\x0a\x2b\x66\x1e\x9f\xd9\x60\x96\xaa\x14\x66\xe5\x71\xb9\xa8\xe6\xfe\xba\xd8\xe1\x2d\xfb\xcc\xf4\x6c\x36\x82\xce\xd4\x67\x0c\x9a\xfe\x8c\xab\x6c\xa6\x27\x21\x72\x9b\x11\x84\xc0\x90\x7e\x3f\x77\x8a\xd1\x3e\x64\xa6\xed\x53\x86\x79\xfc\x7b\x91\x09\xab\xa5\x2c\x5e\xc8\x1c\xa0\x9c\xac\x23\xa5\xa4\xb3\xc8\xe8\xcd\x53\x64\xbd\x0d\xa6\x22\xac\xa2\xda\xec\xec\xb5\xf7\x5a\x27\x01\xd8\xdc\x9c\x77\xb0\x8e\xd7\x16\xcb\x9b\xa8\xe5\x52\x16\xb2\x81\xad\x79\xab\xc1\x5a\x61\xe7\x68\x34\x7c\x86\x26\xf4\x65\x60\xc5\x62\x16\x46\x74\xbb\xd7\x53\x71\x7a\x53\x48\x15\xea\x91\xd6\x88\x51\x24\xd7\x9f\xe7\x92\xa9\x16\xf0\x5f\x44\x0f\xd5\x4a\x2e\x62\x2b\xab\x3a\xaa\xb5\x9d\x64\x9a\x38\x5a\xb1\xd7\xc3\x21\x35\x6a\xd2\x6e\x23\x41\x7f\x8f\x86\x05\x16\x94\x89\x3b\xd2\x63\xb8\x58\x71\x0b\x2e\x5f\xcd\x65\xf1\x18\xa0\xb2\xce\x97\x42\xa5\x9f\xc7\xb8\x7e\x48\x4e\x0b\x15\x70\x51\x2c\xee\xe6\x41\x2a\xef\x16\xf7\x40\x49\x05\xa8\xd0\xbc\x83\x5f\x65\x8a\xae\x89\xc1\x88\xc5\x93\xab\x7e\xf7\x62\x81\x26\xc6\x34\x22\xc7\xfa\x15\x5c\x7e\x9d\x88\xb8\x94\x85\x2a\x90\x22\xf6\x34\xcd\x8b\x8a\x8f\x7c\xb1\x6d\xdd\x46\xab\x9a\x4e\x73\x9e\x4a\xb0\x2a\x2e\x1f\xd2\x3c\x5c\xdb\x30\x6a\x37\x6b\x25\xdf\xd2\x37\x1a\x52\x74\x5a\xa3\x3d\x6a\x16\x1b\xbd\xa2\x1d\xb9\xb7\x34\x28\xca\x0d\xa6\x85\xde\xfc\x92\x5c\x93\x1d\xb5\x43\x7e\x4c\xc5\x2c\xe7\xb2\x22\x57\x28\x5d\x11\xa1\xa3\xc1\x51\x92\x0d\x13\xf9\x46\x38\x67\x23\xc1\xd9\x88\x4b\x79\x65\x62\x9e\x56\x0f\x37\x72\xbc\x24\x85\x80\x95\xae\xc0\xff\x7b\x6f\x9d\x71\x35\x4d\x67\x33\x4d\xce\x49\x06\xa1\x44\x70\xb9\x46\xd6\x76\x82\xc0\x79\x6c\xef\x00\x0b\x33\x62\xd9\xec\x32\x6e\x04\xb7\x94\xfc\xbe\x78\xe0\x2f\xed\xfa\xcf\x08\xc3\x09\x62\xb0\x97\xc8\x7d\x10\xcd\x60\x20\xd1\xf9\xa2\x48\x18\x63\xb0\x98\xd0\x8e\x1c\xfc\x8f\xa4\x7b\x51\x72\x03\xaa\xfe\x54\xd7\xb4\x10\x1a\xe8\x23\x03\x13\x61\x71\xee\x5e\x31\x96\x98\xe7\x16\x19\xa0\x50\x00\xe6\x08\x62\x47\x62\x76\xf6\x69\xa6\xc2\x22\x09\xed\xc6\x81\xb7\x80\x4c\x29\x13\x8c\x9b\xb7\x1c\x02\xae\x66\xfa\x18\x7c\x97\x8e\x41\x89\xf4\x91\xa9\x2d\xce\x80\x58\x1b\x62\x1b\x6f\xda\x89\xb0\x3b\x35\xab\x22\x1d\x94\xdc\x17\xb3\x45\x6e\x72\x2b\xf0\x4b\xe6\x2d\xe6\x9f\x4b\x40\x63\xc5\x04\x66\x0e\x5e\x0a\xc6\x44\x5d\x6b\xbd\xd9\x10\x49\x2d\xd8\xaf\xaf\x21\x28\x82\x67\xa9\x56\xab\xae\x1a\xbc\xc4\xcb\x72\x37\x85\x18\xaa\xe4\x62\xaa\x0a\x74\x29\x8d\x12\x02\x20\x80\x47\x3c\x9e\xa7\xd5\xe4\x51\xbc\x93\x20\x3e\xa9\x96\xa1\x8c\x80\x28\x85\x8a\xe0\xf0\x13\x75\x0c\x91\xb7\xcf\x40\x65\xdb\x8e\x8e\x42\xd4\x90\x01\x6a\x3f\x91\xf4\xb6\x26\x82\xd2\xd0\x57\x3d\x66\xe8\xd3\x1a\x57\xf3\x34\x4d\x2b\x4e\x16\x10\x4b\x6e\x33\xc1\x67\x64\xa4\xdf\x6f\x8a\x02\xcc\x58\xd8\x37\xeb\xa0\xcc\x8b\x58\xdc\xdf\x70\x49\x46\x26\xef\x83\xa4\x01\x00\x93\xe8\x9e\xe2\xe6\x77\x3e\x55\x64\x84\x48\x02\x95\x40\x87\xb2\xd9\x61\x60\xdf\x39\x02\x71\x1a\x62\x4e\x8b\xce\x6f\x0a\xd0\x5e\xad\x94\x05\x23\xc4\x0b\xee\xc2\x95\x99\xd6\xdb\x4b\x9c\xb8\x04\xa4\x0e\x05\x73\x43\x93\x62\x5f\x24\xc2\x64\x0c\x3d\x60\xec\x52\x5c\x51\x0e\x3f\x51\x3b\xd1\x3e\x0c\xad\x0b\x2e\x61\x2b\x70\xc1\x99\x5b\x00\x26\x96\x40\x47\xbb\x75\xb5\x75\xcf\xa4\xfa\xe2\x8d\x12\x90\x60\xba\xc8\xd5\xc8\xf5\xd4\x7e\x16\x8d\x9a\xb0\xcb\x02\xee\x81\x19\xd9\x32\x23\x61\x8f\xe8\x09\x80\x15\x43\xb2\x28\x8f\x8a\x19\x3f\x54\x60\xae\x89\x29\x08\xf8\x3e\xfb\xf6\xdf\xfb\xfd\xd7\xff\xb6\x0f\x86\xd9\x6e\x0b\x44\xd5\x75\xc3\x64\xb3\x53\xe6\x0c\xab\xc1\x19\xcd\x80\xef\xde\x1e\x44\x9e\x21\x84\x1d\x27\xe1\x64\xbe\x9f\xc2\xa6\x12\x50\x96\x5e\xd1\x74\x67\xa7\xe1\xba\x64\x60\x61\xa9\x9a\xa3\xb5\xd1\x07\x56\xba\x94\x6e\x17\x72\x85\x25\x58\xe9\x98\xed\xd1\x3b\xf6\x60\xd7\xa1\x13\xf6\x50\x64\xb3\x60\x98\x24\x5a\xa7\x19\x7b\xb8\x1c\x5f\x51\xd1\xef\x9b\x66\x50\xfa\x04\x00\xdd\xbc\x2c\x2f\xb3\xab\x03\x98\x13\x57\xda\xbd\x0c\xe9\x38\xb2\xc9\x08\xac\x3f\x1a\x33\x76\x37\xd8\x83\xf1\x13\x4b\x44\x44\xcd\xcc\x9e\x5e\x46\x9b\x13\x44\x95\x0c\xcc\x1e\xa8\x95\x34\x1d\xec\x51\x45\x27\x90\xa6\x8d\x77\x76\x68\xb3\x49\xd6\xef\x8f\xf7\xd9\x1d\x80\x9d\xdd\x5e\x4a\xa8\x3f\xac\x03\x97\x74\x09\xd2\x50\xce\xa1\x69\x2c\x2e\x0d\x16\xc9\x80\xe0\xc4\x28\x63\x4b\x27\x21\x4c\x68\xb0\x0b\x78\xe9\x15\x50\x18\x79\x51\x79\x06\x65\xda\xe7\x12\xc0\xce\x67\x41\x2a\x82\x85\xa8\xb2\x3b\x30\x9e\xe0\x06\xcc\x60\xb0\x37\x04\xd3\x56\xfc\x8e\xcb\x00\x68\x5d\x70\x1a\xdc\xa7\x9f\xc0\x7e\x02\x35\xe7\x7a\xb6\xe4\xb7\x5c\x72\x31\x85\x09\x7a\x80\xee\x48\xa5\x4c\x97\x01\xcf\x39\x46\xf5\x00\x8c\x74\xae\x9b\xff\x97\xcb\x62\x80\xcb\xce\x02\x9d\xef\x41\xc9\x02\x11\xf2\xec\xf0\xe2\x78\x72\x7a\xfd\xee\xf0\xe2\xc7\xeb\xe3\x93\x93\xf1\x0f\x87\x27\xd7\x87\x67\x67\x87\xff\x7d\x7d\x7c\xfa\x76\xfc\x2b\xd1\x82\x31\x12\xa4\x12\x32\xbb\x36\xd5\xcd\xe8\xde\x30\x42\xce\x8d\x80\x0c\x7b\x04\x02\x1a\xb2\x8f\xa2\xea\xf7\xb3\x7d\x27\x82\x2e\xc7\x17\x40\x4e\x05\x4c\x67\xb7\x99\xa3\x26\xf8\xf9\xfd\xf9\x45\x70\x3a\xb9\x08\x6e\x78\x70\x07\x42\x85\xa8\x0f\x64\x83\x48\x34\xaf\xda\x53\x04\xe0\x66\x2c\x5b\x15\xfa\xbc\x86\xd9\x0e\x2b\xff\x38\x3c\x79\x3f\xbe\x9e\xbc\xbf\xb8\x9e\x7c\x7f\xfd\xdd\xe4\xfd\xe9\xdb\xf3\x75\x2e\x2a\xb6\x78\x41\x99\xb5\xcb\x7c\x41\xf9\x83\xbd\x1e\x58\x7a\x93\x1f\xff\x41\xd0\xa7\x66\x2c\x6b\xb3\xea\x3f\xf6\xa0\x62\x46\xc8\x79\x4d\x43\x6c\xfa\x03\x73\x7e\x07\x9e\xfc\x65\xf0\xf4\x96\xe0\x3d\xc1\xb9\x83\xab\x8c\x1f\x53\x29\x40\xc7\x21\xa9\x20\xf2\xcc\xb9\xe6\xd4\xf8\xc3\xe0\x13\x5f\x56\x81\x80\xd4\xad\x5a\x94\x18\x64\xc0\xc9\xba\x45\x96\xda\x1e\x9c\x1d\x07\x55\x6b\xc7\x95\x3d\x10\x68\x30\xed\x5c\x29\x38\x1a\x84\xab\x91\x20\x6b\x52\x46\xb0\x56\xeb\x7e\xdb\xb6\x26\xe0\x73\x2d\x77\xf4\x61\xb0\xec\x25\x6f\xbd\xd7\x30\x69\x9c\x55\xb3\x73\x0a\x45\x97\xa0\x92\x16\xc6\x2e\xec\xaa\x4d\x72\x0a\x95\xaa\x73\xe6\xab\x15\x3a\xf0\x2e\x48\x26\x10\xc5\x52\xe3\x89\x0c\xd3\xa9\x93\x43\x47\xdd\x00\x99\xeb\xc3\xd3\xeb\xc9\x77\x3f\x41\xe2\x47\x60\x3f\xae\x71\x0a\x32\xcd\x2f\x39\xca\xfc\xb9\x55\x3f\x16\xe5\xc7\xa0\xb4\xc1\xd2\xed\x01\x79\x09\xa2\xac\x70\xa3\xaa\xc0\x46\x33\xe4\xfb\xec\xfb\xa3\xc1\xdf\xff\x63\xf8\xaa\xb3\xff\xe4\x1d\x58\x0a\x60\x0e\xab\xf8\x76\xf3\x8d\x4c\x9c\x1b\x27\xf4\x1c\x2d\xd8\xb9\x49\x4d\x1a\xd8\x65\x36\x4d\x75\x73\xcb\x90\x60\x5e\x87\xc6\x87\x6c\x83\x16\xa7\x45\xb9\x74\xaf\x00\xdb\x2d\x24\xdd\xca\xe2\xfe\x59\x92\xb0\x73\x93\xa4\x12\x4a\x79\x74\x2b\x61\x5a\x62\x5a\x97\xde\xe4\x1a\x12\x1f\x71\xef\x8f\xa0\xa2\x59\xf0\x11\xf7\xfd\xe8\x89\x30\xea\x90\xff\xfd\xd9\xe4\xe7\xeb\xb3\xf1\x7f\xbd\x3f\x3e\x1b\xaf\xd1\x6f\x7d\x87\x25\xdf\x9a\x93\xd7\xa2\xf0\x5c\xa5\x65\xa8\x01\x34\x8f\xb5\xf3\x7b\x96\x13\xdd\xfb\xe5\xac\x00\x19\x1f\x69\xf0\xd1\xee\x6f\x99\xc2\xbd\x9f\x67\xca\xf8\x9c\xbf\x84\xab\x2a\x74\xec\xfc\xcb\xf9\x39\x3a\x3c\x45\xeb\x82\xa2\xea\xe2\xf0\xf8\xf4\x1a\x3c\xe9\xf8\xfb\xe3\xd3\x2e\x7f\x3a\xdb\xb7\x3c\x6a\x0e\x9e\x4c\x96\x64\xf0\xee\x45\x7c\x17\xe5\x53\x56\x6c\xb6\xe2\x4a\x19\x44\xe6\x74\x07\x42\xb6\x7e\xe8\x32\x7f\x94\x0a\xcd\x21\x97\xe0\x88\xee\xd1\x13\x68\xae\x5a\xfa\x83\x54\xe9\x70\x30\xe3\x55\x26\xc1\x5a\x71\xf3\x4d\xab\xb1\x0c\x1d\xbe\x6d\x58\x68\x7c\xfd\x16\xc5\x98\x42\xc9\x6b\xb8\xbe\xe3\xad\xa6\xd0\xa5\x19\x26\x81\xdc\xe2\x45\x72\x91\xb0\x0e\xa5\xa9\xa6\x0f\xc3\x9b\x0a\x66\x05\x37\xea\xe3\x9f\xa1\x1a\xdb\xa4\xf9\xfd\xe9\xd9\xf8\x7c\x72\xf2\x8f\xc3\xef\x4e\xc6\x9b\x54\xbf\x64\xf2\x5a\x13\x73\xf6\x54\x94\x23\x43\x3a\xc5\x5d\x47\xc6\xec\xa9\x06\xd1\xc8\xd8\x50\x4d\x4b\x48\x19\x6d\x3a\xc4\xc3\xcb\xf9\x95\xd5\x2e\xc4\xf0\x17\xe9\x81\xad\xca\x58\xa4\xf7\xfc\x9f\xe0\x1f\x77\xff\x52\x09\x68\x67\xb1\x55\x02\x6d\x94\x99\xdb\x52\xd9\x1c\x2d\xf7\x74\x4d\xd0\xa1\xe6\x1d\x16\xfd\x41\x85\xe7\xaf\x90\x29\x05\xf7\x8b\x4a\x61\x92\x01\x20\x72\xc9\xc3\x39\x18\xee\xf8\xf4\x68\xec\x82\x89\x4e\x80\x88\x96\x00\xd4\x55\xec\xa7\xf3\xc9\x69\xac\xf3\x9e\x50\x3f\x1a\x47\x9a\xdd\x2e\x31\x66\xd1\xcc\x2f\xe9\x21\x87\xec\x0d\xed\xe9\x9a\x9f\xfc\x8b\x37\x4d\x8e\x8e\x35\xc0\x5a\xfa\xa9\x8b\x01\x11\xd9\x43\x22\xa9\xb1\x85\x55\x5d\xa5\x52\xa0\x18\x5c\xf5\xcc\x55\x3f\x32\x31\xac\xc9\x5a\xa7\x0d\x2a\x46\x5b\x5f\x1a\x55\x4f\x41\x8b\xde\xc9\x8a\x9d\x31\xd1\x21\x33\xc6\xd4\xe1\xc0\x7b\x1e\xf9\x95\x9d\xb9\x15\xb8\xbc\x6a\xeb\x15\x13\xe6\xd5\x7a\x49\x29\xc0\x41\x71\x73\x94\x00\x55\x85\xdd\x81\x43\x5d\x8b\xc7\x7b\x4f\x60\x92\x6b\x27\x09\xae\xb2\x83\x4c\x81\x39\x9e\x21\x8d\x85\x32\xc3\x1e\x43\x6c\x1f\x3f\x83\x2c\x4f\x71\x3d\xcd\x8e\xd5\xb6\xf9\xe5\x8b\x6f\x2c\x8d\x75\x8c\x39\x36\x58\x37\x07\x3d\x13\x31\x59\x3b\x7e\xb2\x50\x50\x2c\x98\xa9\x7e\xd0\xe3\xad\x2b\x58\x9f\xd1\x19\x83\x3e\xd0\x1b\xa0\x73\x4d\x63\x64\xd2\x50\x86\xc3\x91\x38\x34\xd2\xbf\x92\xb8\x2f\xde\x18\x7d\xfe\x76\x19\x4a\x9d\xcc\xd1\x56\x8a\x51\x4d\x91\x8c\x2d\xc7\x51\xa6\x9f\xe1\xf8\xba\xa6\x8b\x97\xb4\xee\x4e\x7e\x38\x1d\xfa\x4b\xff\xa9\xfa\xbd\x89\x7b\xd1\xff\x03\x00\x79\x8c\x7f\x46\xde\x79\x8c\x7f\x46\x04\x79\x8c\x7f\x86\xc1\x3c\xc6\xbf\x9a\xde\xae\x33\x02\x75\x6f\x6c\x88\xf4\xec\x1b\x72\xf6\x6e\x26\xdc\x72\xd5\x3e\xae\x1b\x0d\x37\xe7\x30\x1d\x22\x31\x75\x6e\x0f\x16\x36\xa5\xe1\xd5\xf8\xcf\x98\x22\xae\x9a\x6f\xa1\x10\x8f\x1f\xfd\x85\xd7\x05\xd7\x88\x0d\xeb\xfb\xe7\xd0\x8d\x4f\x06\xdd\xea\x4f\x41\xd6\x32\xe5\x70\xf6\xa2\xf0\xb7\x50\xb2\xe6\x54\x55\x04\x61\x65\xbd\xed\x05\x64\x76\x71\x59\xd7\xc9\x94\x1d\xa2\x63\x8f\xb3\x4a\xff\x1f\x74\xde\xb6\x11\xa0\xb4\x4b\x83\x58\x67\x4f\xa4\xda\xc2\xc7\x3a\x6d\x3c\xd3\xd7\x9e\x96\x65\x89\xb9\xfe\x78\xe6\x86\xd4\x16\x3c\x34\xc3\x0b\x01\xff\xa8\xd7\x18\x80\x3d\x54\x74\x67\x92\x18\x39\x99\x30\xcf\xba\xc6\x64\xd2\x1e\x5d\xba\x68\xc9\x0a\xd3\xa0\x24\xe7\x2c\x73\xd5\x1d\x07\xdb\x57\x11\x15\x35\x7a\x61\x15\xff\x54\x15\x42\x07\x39\x7d\x68\xc7\x66\x78\xee\xd8\x3c\x35\x51\x86\xa5\xed\x1b\x67\x73\x3c\x8c\xc4\x83\x64\xf6\x54\x43\x10\xf3\x8e\xed\xda\xfa\xc0\x1c\x64\x02\x78\xed\x93\x15\x81\x15\x05\x75\xad\xcd\x9a\xed\xf2\xeb\x7d\x78\x5e\xd9\x3e\x37\xbd\x6b\x84\xaf\x73\xd2\x8c\x73\xdd\xfa\x3f\xa2\x8d\xec\xcd\xf1\x94\x77\x2c\x19\x3d\xcd\xe3\x42\xe4\xc0\x07\x13\xe9\x43\x76\x87\xbb\x41\xc3\x09\x34\xb4\x86\x0b\xe1\x98\xbf\xa9\x9a\xb3\x19\x08\xc7\x6e\x12\x64\xdf\x60\x98\xb1\xbe\x97\x03\xe0\xf9\xaf\x61\xe7\x26\x5b\xa1\x9a\xdb\x13\x50\x73\xf4\x19\xcc\xe3\x5f\xce\xf1\xc8\xb2\xc7\xe3\x5f\xf8\xcd\x79\x31\xfd\xc4\xed\x05\x0c\xb9\x00\x25\x06\x37\xf0\x54\x71\xd9\x26\x3c\xb6\x8c\x0f\x9a\xd1\x15\x31\x57\x30\x8f\x15\x83\x8a\x5a\x57\xf6\x89\x5d\xfa\xfc\x7c\x6c\x4c\xad\xaa\x78\xdb\xe9\x4e\x0a\xed\x2e\xa0\xb8\x26\xbf\xd1\xdf\x16\x00\x45\x41\x21\xed\x33\x2c\x41\x30\x6d\x10\xa0\x77\xc1\x88\xf9\xfa\x80\x44\x74\xf7\xb7\xf0\xb1\x5a\xe1\x77\x0a\x51\x75\x30\xda\xd5\xde\x11\x90\xa5\x47\xe5\xe6\x70\x78\x5a\xe4\x3b\x64\x77\x97\xec\xe4\xf1\xbc\xa8\xd4\x8e\xb0\x80\x7e\x44\x78\x08\x26\xda\xc3\x8f\xdf\x70\x9d\x5d\x4a\x1e\x2b\x3c\xff\xd0\x83\x16\x32\x07\x94\xf7\x64\x7b\xb2\xd0\x60\x4c\x5a\xf9\x1c\x0b\x8d\x0e\x57\xe0\x1b\x29\xc0\x8b\x33\x88\x07\x2e\x2b\x34\x07\x1b\x48\x0a\xb1\x28\x35\xe4\xbc\x7c\xa7\x76\x5d\xfa\x66\x61\x6b\xcf\xb4\x10\x02\x96\xdf\xda\x37\xcb\xaa\x97\xba\x37\x2f\xdf\x6d\x97\x9d\xc4\x67\x78\x32\xea\xb7\x00\x62\x4c\x29\x44\x1e\x5e\x11\x5a\xe1\xed\x67\xba\x71\x69\x61\x2f\x51\x20\x51\x2d\x6c\x93\x0b\xf4\x95\x49\xb3\x00\xee\xb2\xa6\x73\x7f\xa2\x68\xfc\x96\x87\xb3\x83\x39\xe8\x42\x77\x8e\xe6\x08\x11\xfd\x58\x27\x08\x49\xb0\x70\x8a\xbd\x6c\x6b\xf4\x4c\x43\x1c\xa3\xe3\x06\x0e\x03\x8c\x98\xf1\x08\xb3\x67\x27\xc0\xa8\x66\x86\xc6\x07\xcb\x68\x63\x79\x00\x4e\x73\xa9\xdf\x9d\xee\xee\x28\xd7\x21\x00\x6d\x3d\xbe\xa5\x9d\xbb\x9c\x97\xeb\xe5\x04\x66\xe3\xca\x4f\x8a\xb5\x3b\x87\x7c\x74\xa3\x4d\x9f\x56\x25\xce\x77\xef\x37\x07\xd5\x10\x44\xcb\xa2\x0c\xbd\xf4\xdc\xe6\xb9\xe4\x6b\xac\x64\xc4\xe5\xf0\x6a\xb5\xd2\x4d\x40\x4f\x93\x83\x0a\x93\x16\x9b\xf6\x08\xdf\xd9\xd4\x3b\xbe\x77\xfa\x52\x75\xc2\xe3\xf5\xeb\xbc\x90\x18\x99\x10\xf0\x16\x74\x6b\xf7\xed\xad\xeb\x4f\xcc\x91\xf9\x65\x7b\xf3\xe4\x2e\x83\xed\x87\x16\x44\x5f\x9e\x92\x2b\x48\xb5\x81\xa5\x62\xaa\x03\x44\x52\x74\xae\x57\x0d\xf4\xb6\x5c\xb0\x1a\x8f\x06\xba\xa1\x6d\x43\xa8\x6f\x03\xf1\x2b\x85\xee\x37\x25\xfa\xde\xd5\x5d\x71\xb7\xc3\x63\x15\xb5\x00\xb7\x47\xe8\x38\x14\x6c\x31\x8c\x68\x67\x1f\x77\x1b\xc7\xf3\x74\x69\x6f\x2b\xcd\x0b\xdb\x1b\x0e\xdd\x27\x22\xce\x37\xec\x84\xbb\x1f\x0e\xac\xd7\x71\x6d\xd1\x01\xe9\x93\x11\x39\x20\xd1\x0e\x29\x19\xd9\xc9\x76\x48\xff\x01\xfe\x7d\x67\xe0\x5c\xe5\x41\x43\x94\x36\xa4\xc6\x24\xc0\x2f\x8f\xba\x5d\xde\x6d\x1c\x60\xf2\x09\x8f\xc6\x8f\x24\x9f\x41\x63\x96\xe6\xd5\x08\x72\x17\x43\x9b\xb9\x99\x4b\xca\x18\x14\x3f\x4e\xc1\xc3\xfb\xd1\x9e\xeb\xf5\xdc\x7d\x2e\xe3\x97\x04\xdf\xf5\xdd\xee\x0d\x04\x71\xbc\x63\xb5\xd2\x28\x41\x12\x20\xc2\x58\xe1\x87\x52\xdd\x7b\x6c\xd7\xa5\x67\xe8\x4b\x41\xfa\x0d\xff\xd6\xce\xab\x72\xce\xcb\xa3\x39\x9f\x7e\xd2\xb7\x96\xde\xd5\x7a\xdb\x03\xba\xab\x69\xeb\xb3\x5e\xd0\xb8\xf3\x4a\x4e\x53\x35\xb5\x8f\x7f\xaa\xf5\x86\x7e\x4f\xef\xc6\x65\x59\xe5\x61\x43\xe2\x89\x18\xe9\xdc\x22\x34\xac\x1c\x8c\xbc\x20\x07\xc6\x41\x20\xa0\x50\x01\x82\x7c\xcb\xf5\x74\x83\x5f\x4c\x75\x3e\xfe\xf0\xfa\xec\xb7\x01\xab\x55\x67\x72\xa3\xf3\x8d\xa9\x4d\x8f\xfb\xc8\x0c\x47\x68\x43\x72\x98\x35\xdf\x43\xb5\x42\xc5\xaf\x3c\xb6\x26\x89\xeb\xd0\x87\xc7\xe7\x68\x70\xfd\x9d\x4f\xac\x3c\x5a\xf0\xd3\x84\x16\xb6\xe6\xc3\x12\x40\x6b\x73\x1a\x63\x04\xbf\xa1\x54\x3d\x8e\x60\x2f\x89\xcc\xa8\x4c\xf8\x83\xb6\xab\x30\x13\x8d\x06\xdd\xab\xff\xe5\x9e\x67\xe0\x6b\x68\x04\x59\x34\x78\xf3\xb7\xf1\x10\xd0\x0e\x48\xd6\xbe\xd6\x80\x3d\xad\x2d\xbd\x05\xee\x63\x51\x3c\x82\xc0\x05\x5e\x55\x02\xa4\xc1\x6b\x0f\xcc\xd3\x3e\x6c\x94\x98\x47\xcc\x8a\xb7\x90\xe6\x59\x83\x47\xdf\x6b\xfe\x4d\x44\x9d\x2a\x1a\x6f\xe6\xe9\x72\xcb\x01\x47\xaf\xd7\x8d\xd8\x40\x8e\x91\x38\x5e\xa1\x36\x78\x16\x4c\xf6\xfb\xf2\x59\x68\xca\xae\x4e\x7d\x68\xa2\x56\x57\x2b\xf9\x0c\x28\xe4\x8b\x60\xe8\x0d\x47\x60\xa9\x88\x58\x81\xd5\x62\x37\xb3\x10\xdd\x2c\x64\xad\x3b\x5a\x4b\x44\x0e\xba\xd9\x4e\x68\xbd\xa0\x9f\xe2\x84\xf8\x41\x13\x3e\xbb\x0f\x2f\x7c\x5b\x35\xd1\x16\xcf\xd3\x84\x7f\xf4\xc5\xf5\xc7\x15\xde\x21\x95\xb5\x0b\x2d\x42\x3f\xf5\x82\x3e\x57\xa8\x08\x8d\xb8\x83\x76\x88\x01\x20\x90\x24\xe2\x9b\x62\xb6\xb4\xfa\x83\xd0\x7f\x10\x0a\x8c\x10\x2a\x3d\xb0\xe5\x45\xe8\x7a\xa8\x19\x1a\x8d\xa6\x1b\x4d\x94\x38\xba\xbd\x92\xcd\x8e\x89\xbf\xd6\xcb\xb4\x3b\xd8\x06\x67\xf6\x2e\x85\x6c\x16\x8d\xba\x99\xa6\x70\x4f\xfa\x32\x78\x3d\x84\x59\x5b\xed\xb0\x4d\xd0\xb5\xd9\x0c\xb6\x22\x56\xc0\xfa\x53\x96\x0d\x3b\xf6\x5d\x0e\xed\x08\xc6\xcc\xda\xfe\x99\xd4\x96\x69\x9a\xa2\xbf\xb1\x57\xdd\xf0\xdb\xef\xb7\x15\x4d\x27\x80\x6f\x18\x97\xc5\x83\x6f\x59\xed\xba\x0e\x24\xe6\x53\x9d\x8d\x82\x7b\x0b\x39\x4e\x14\x0a\x1d\x29\x8f\x75\x81\x01\xa5\x66\xf8\x08\xcb\x17\x8f\x74\x56\x4c\xf5\xa7\x66\xf6\x7e\x3d\xaa\x21\x17\xfb\xea\xff\x02\x00\x00\xff\xff\xbb\x78\x74\x24\x34\x2d\x00\x00")

func distVeloxMinJsBytes() ([]byte, error) {
	return bindataRead(
		_distVeloxMinJs,
		"dist/velox.min.js",
	)
}

func distVeloxMinJs() (*asset, error) {
	bytes, err := distVeloxMinJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dist/velox.min.js", size: 11572, mode: os.FileMode(420), modTime: time.Unix(1458782452, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"dist/velox.min.js": distVeloxMinJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"dist": &bintree{nil, map[string]*bintree{
		"velox.min.js": &bintree{distVeloxMinJs, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

