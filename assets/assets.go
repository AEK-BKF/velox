// Code generated by go-bindata.
// sources:
// dist/velox.min.js
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _distVeloxMinJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x5a\x7b\x73\xe3\x46\x72\xff\xdf\x9f\x02\x44\xb9\x58\xc0\x69\x08\x52\x7b\xf6\x25\x21\x3c\x52\x64\x2d\x6d\xcb\x25\x93\x1b\x49\x7b\x76\x8a\xab\xe3\x42\xc0\x50\x84\x0d\xcd\x20\xc0\x40\x5a\x46\xa4\x3f\x7b\xba\xe7\x81\x07\x49\x69\xb7\x2a\x57\x75\xff\x48\xc0\x3c\xfb\xdd\xbf\x6e\x70\x38\x74\x1e\x59\x26\x3e\x39\x03\xe7\x71\x14\xbc\x09\x46\xf0\xb0\x92\x32\x2f\xc7\xc3\xe1\x7d\x2a\x57\xd5\x5d\x10\x8b\x87\xe1\xef\x79\x9a\x65\xa2\x88\x86\x6a\xf1\x57\xb0\xeb\xe7\x28\x7d\x60\xce\x3b\x3d\xec\x7c\x97\xb0\xc7\xff\xb4\x8b\x70\xc7\x09\x9c\xf3\xcb\xc5\x8d\x73\x2e\xf2\x75\x91\xde\xaf\xa4\xf3\x66\x74\xfc\xb7\xaf\x1e\xa3\xc2\x59\x2c\xd8\x27\xc9\x78\x52\x92\x19\xcc\xa4\x3c\xca\x26\x45\x21\x0a\xf2\x7b\x29\x78\x1e\xc9\x78\x15\xf6\x96\x15\x8f\x65\x2a\xb8\x27\x09\xf3\x9f\xed\x9b\x03\xef\xfe\x73\x14\x08\x9e\xa5\x9c\x51\x1e\x3d\xa6\xf7\x91\x14\x05\x0c\x5c\xc2\x40\xb8\x14\x85\x87\x17\x30\x3a\x0a\xd9\x77\x69\x90\x31\x7e\x2f\x57\x21\x3b\x3a\xf2\xed\xa6\x7e\x3f\x9d\xb3\xdb\x20\xaa\x60\x1b\x93\xc5\xda\xbc\xab\x67\xcf\xdf\xd6\x37\x15\x78\x33\xe1\xfe\x73\xf9\x94\x02\x45\x78\x6f\x1c\x95\xcc\x89\x82\x5f\xaf\xc7\x72\x95\x96\xc1\x53\x49\x7b\xa3\xf0\xae\x60\xd1\x1f\xa1\x99\xba\xbe\x9e\xe8\xb9\xb2\x64\xcd\x64\xc2\x96\x51\x95\x49\x98\x29\xc4\x93\x7b\xb3\xce\x99\xf3\x50\x95\xd2\xb9\x63\x5a\xf2\x70\xa2\x23\x0a\xf3\x0c\x47\xb8\xdb\x74\xe9\xb1\xcd\xc6\x63\xd4\xd5\xe2\x76\x7d\x32\xfc\x87\xf7\x54\x6e\x50\x31\x7e\x79\x3a\x1e\x06\x92\x95\xd2\x63\xbe\x5a\x15\x07\x79\x21\xa4\x88\x45\x76\xe4\x0e\x87\xee\x51\x1c\xac\x44\x29\x8f\x98\x4f\x0c\xa1\xfd\x3e\xac\x62\xc0\x64\x9e\x45\x31\xf3\x86\xff\xc0\x73\x86\xc4\x7d\x2a\x5d\xdf\x2c\xaa\x8a\x8c\x32\xd2\xe3\x9b\x8d\x2b\xee\x7e\x67\xb1\x74\x7b\x54\x02\xa9\x62\xe9\x70\x5f\x53\x7e\xc1\x1f\xa3\x2c\x4d\x1c\x33\x1f\xaa\x7d\xf0\x42\xb9\x3e\xe2\x91\x15\x25\x88\x8e\x8e\xf4\xab\xe0\x55\x9e\x44\x92\xd1\x5a\x97\xfe\xf3\xd6\x4e\x31\x54\xf8\x81\x99\x58\x70\x0e\x87\xb3\x84\xf6\x8e\x3b\x23\xa0\x1b\xd4\xac\x20\x29\x89\x48\x49\x56\x24\x0e\x41\x67\x55\xc1\x1d\x19\xfc\xca\xee\xae\x45\xfc\x07\x93\xa7\x9e\xa0\xee\xe3\x1b\x97\xa4\x74\x7e\x4b\x22\xda\xb6\x22\xd4\xa5\x3a\x81\x72\xf6\x54\xab\xd7\x1e\x92\x06\x79\x55\xae\x3c\xe1\x13\xb1\x25\xa8\x63\xfa\x8c\xff\x41\xc7\x5d\x4b\x34\xcb\x23\x0f\xd7\x10\x1c\xc2\x65\xa0\x34\xbd\x1e\xf5\xfe\xe2\x06\x58\x55\xef\x50\x0a\xa3\x82\xd4\xb6\xdc\x1b\x91\xdd\xbb\xc0\x0a\x7a\xf2\x80\x3e\x60\xac\xc7\x0e\x8c\x33\xdf\x5c\xc6\x42\x64\x94\x87\x70\x80\x74\x52\x5e\xca\x88\xc7\xb8\xe0\xac\x28\x22\x30\x78\xb6\x37\xe6\xa3\xe3\x84\xd2\xf8\xcb\x09\xb3\x8e\xe3\xcb\x20\x17\xb9\xe7\x87\x2c\x03\xfb\xc6\x45\x20\x29\x90\xb8\xef\x7e\xed\x52\x4a\xf9\x7c\x74\xbb\xd9\xa8\x21\xa0\x27\x61\x19\x93\xcc\x91\x73\x7e\x1b\xd6\x4b\x99\x8f\xef\xb4\xf4\xf0\x1f\x61\xf0\xa7\x16\xb9\x04\x95\x07\x51\x92\x4c\x1e\x19\x97\x97\x69\x09\x11\x81\x15\x9e\xab\xe5\xe1\x82\x6e\x0e\x4f\x2f\x97\xf5\xfc\x8a\xce\xdd\x07\x56\x96\xd1\x3d\xbc\xbb\xca\xa4\xe0\xbf\xc8\x19\x87\x7f\x71\x26\x4a\xe6\xde\x92\x98\x02\x5f\x22\x8e\x50\xae\xa4\xd0\x82\x47\x81\xd1\x67\x63\x59\xe3\x96\x15\x2a\x8b\xab\x63\x03\x2a\x45\x8d\xd8\xe8\x40\xd4\x43\x7b\x03\x0a\x1a\x94\x15\xc6\x19\x8b\x8a\x1b\x08\x88\xa2\x92\x5e\xb3\x27\x90\x7e\x63\xc5\xfd\xbe\x7e\x84\xa5\xe0\x1a\x9e\x99\x01\xb1\x45\x6b\x70\xe3\xe6\x85\x1e\x8f\x46\x30\x49\xad\x5f\x1e\x79\xc3\x0f\xa7\xc6\xe3\xed\x98\x7f\xea\xf6\xdd\xb1\x7b\xea\xfa\x47\x6e\x4e\xdd\x23\x71\xe4\xf6\x1f\xe1\x7f\xdb\x11\xad\xf7\x9f\xd6\x14\x28\xd3\xaf\xbd\x05\x62\xda\xb8\x3b\xa5\x64\x7d\x2d\xaa\x02\x82\x84\x24\xcf\x10\xf9\x56\xe7\x05\x4b\x60\x30\x8d\xb2\x72\xdc\x1b\x6d\x7d\xc2\x14\x5d\x64\x15\x80\x8e\x27\x11\x44\xc6\xc6\x68\xfd\x67\xa6\xce\x9a\x83\x12\x81\x94\x5b\xca\xe6\x2e\xbe\xe3\x73\x70\x97\xf2\x04\x02\xd6\xd6\xb0\x9d\xa7\xfc\x3e\x90\xb4\x64\xf2\x82\x4b\x56\x40\x64\xf1\x9a\x71\xb5\x16\x5f\x7d\xf2\x57\xf6\x0d\xc8\x3d\x49\xcb\x2f\xd0\x96\x8d\x18\x56\xc0\x5b\x62\x1e\xdb\x9b\xd0\x29\x2c\xd3\x46\x7f\x8a\xa3\xf0\x00\x47\xe0\x84\xb2\xc5\x11\xbb\xa5\xbc\xca\x32\x60\xc1\xdb\x53\x2a\x3c\xb6\xdd\xaa\x25\xc9\xd6\x0a\x30\x8a\x28\x59\x5f\x4b\x88\x8a\x3d\x4a\x5b\x6b\x82\xf3\xcb\xd9\xf5\xe4\xed\x66\x73\xf0\xb0\x5a\x63\x2f\x1e\x55\xaf\x30\x07\xf9\xed\x95\xca\x13\xbc\x96\x21\x2a\x2e\xc8\xbe\xc9\x6a\x9d\xf8\xdb\x2d\x29\x21\x3b\x8f\xdb\x8a\xb5\x3e\xfb\x19\xb6\x3f\x43\x29\x6d\x53\x3a\x7b\x37\x99\x36\xa6\x19\xe0\x95\x68\x91\x8f\x02\x52\xcc\x68\x4b\x90\x98\x3d\x65\xab\x45\x2e\x4e\xb9\xa8\x5d\xd8\x67\xfc\xbf\x43\xac\x82\x00\x84\x83\xe3\x43\xfe\x89\x30\x0c\xea\x2d\x20\x28\x50\x39\x98\xca\x33\xa3\x3f\x5f\xcf\xa6\x41\x1e\x15\x20\x19\xee\x6f\x63\x44\x1d\x5e\x51\xf3\xa9\x88\x68\xa7\x2a\x98\xc3\xac\xdc\x63\xc1\x9d\x48\xc0\x5d\x7b\x36\xf9\xf9\x2f\xee\x70\x51\xca\x26\x59\x42\x9e\x0d\x19\x7a\xb7\x8c\x4e\x6b\x94\x13\x44\x79\x9e\xad\x3d\x7b\x12\xd1\x67\xfb\xe3\x72\x6f\x88\xb8\x96\x3d\x08\xbb\x36\x0b\x98\x35\xc1\xd7\xea\x18\x23\xf0\x66\xc0\x7b\x65\x97\xc9\xcc\x76\x8f\x79\xb5\x26\x62\xf3\x38\xeb\x06\x92\x3a\x36\x6d\xb5\xe4\x31\xce\xee\x29\xa8\x95\xbf\x47\x7a\x99\xb2\xbe\xd7\xd6\x1d\xb7\x8e\xff\x0b\x7d\x43\xba\x5e\xdd\xef\x37\xc8\xad\x13\x58\x31\x74\x74\xac\xd7\x1c\xd9\x0e\x1e\xcd\xc1\xbe\x31\x17\xa5\x9a\x8e\xb1\x00\x37\xa8\x3b\x4f\x06\x0a\x6a\xd1\xc8\xf7\xc7\x51\xc6\x0a\xe9\xb9\x37\xb0\xdd\xb9\x03\xe8\x53\xb2\xc2\x49\x04\x2b\x1d\x2e\xa4\x53\x56\x79\x2e\x0a\xd9\xd8\x3a\x28\x77\xeb\x3d\xc1\xad\xe2\x89\x24\x22\xae\x1e\xc0\xad\x89\x36\x63\x9f\x1c\xb0\x4b\x52\x84\x6e\xcb\xf7\x5d\xcc\xa8\x0a\xc7\x01\xc6\xfb\x50\x6e\x3e\x54\xa3\xd1\xd9\xc8\x3f\xda\xb4\x5f\xbe\x1e\xde\x83\x41\xb7\x0f\xeb\x62\xe2\x34\x58\xe4\x22\xcb\x50\x20\x45\x5b\x32\x2d\xb9\x8b\x20\x8e\xb2\xcc\x4b\x41\x12\xb2\x05\x74\x85\xa7\x5d\x02\xac\x3b\xed\xb8\x6a\x6a\x63\x89\xb6\xf0\x50\x87\x4a\x4c\x13\xbf\xfd\x72\xf9\x13\x00\xc8\x2b\xf6\x3f\x15\xe4\x24\xc0\x0d\x68\x0a\x9e\xfb\xe3\xe4\x06\x90\x57\xf0\xfe\xea\x92\xf4\x30\x81\x81\xb7\x4a\xb3\xe6\x27\x38\x17\xb3\xf7\x59\x1c\xb3\x5c\x42\x76\x96\x50\x01\x0c\x19\x0a\x61\x50\x4a\xb8\xf5\xc1\x3d\xbc\xe1\x1c\xe2\x31\x1b\x9c\x0b\x2e\x0b\x91\xc1\x3e\x2e\x06\x31\x0e\xbd\xb0\xfc\xb7\x81\x19\x60\xc9\xe0\x57\xc8\x5e\xb0\xa3\x4b\x2c\xec\x43\xb7\xec\x51\xc0\xc4\x87\x0e\xb8\x8c\x4a\x39\x50\xca\x19\x5c\xbc\x75\x49\x89\x20\xc3\x75\xe1\x2e\xa9\x05\x4a\xbf\x65\xdf\xc0\x9b\xe0\x4a\x52\x25\x4a\x2a\x5e\x45\xfc\xbe\x83\x72\x35\x28\x10\x24\x26\x39\xc9\x48\x45\x96\x18\x82\xfe\x4a\xa9\x31\x5f\x2b\xe2\xcd\xe6\x9b\xbd\xb1\x7e\xff\xcd\x68\x64\x46\xf1\xf4\xaa\x44\xdd\xee\xa8\x65\x36\x9d\x4e\xce\x6f\x2e\xa6\x3f\x82\x4b\x74\x26\x53\x15\x54\x41\x07\x90\x2f\x55\x88\x51\x9c\x78\x06\x12\x3d\x63\x0c\x18\xeb\x97\x2d\xe2\x7e\xe0\x2c\x44\xd5\x4b\x4b\x45\x99\x0b\x5e\xb2\x1b\xd0\x0d\xc0\x4b\xd7\x44\xc5\x04\x7c\x04\xf1\x9c\x80\x78\x5a\x56\x77\xa0\x2e\x6f\x65\x00\xa2\x1f\x94\x79\x96\xc2\x05\x1f\x38\x08\x36\xa6\x0d\x1a\xcb\x11\x80\x67\x50\x0a\x54\x28\xbe\x15\x95\x61\xf6\x9d\xb0\xb0\x32\x83\x7a\xac\xa2\x62\x9e\xdd\xd6\x25\x09\x23\x2e\x9c\x00\x9c\x57\x01\x38\x12\xfb\x34\x83\x98\xad\xcc\xc3\xf5\x4f\x63\x18\xac\x4b\x17\x35\x38\x3e\xfd\x50\xfe\x65\x88\x5b\xc6\xdd\x2d\x2a\x36\xc0\x16\x4f\x23\x02\x15\xdf\x01\x5f\x78\xad\x03\x34\x84\xab\x0f\xf0\x49\x5a\x4e\xa3\xa9\xde\x80\xe5\x54\x44\xf5\xe3\xee\xd1\x98\x4a\xe0\xe4\x5c\x17\x0a\xad\x03\x71\xa2\x75\xde\xce\xb6\x34\x19\xc3\xae\xb2\xcd\x02\x0c\xbd\x44\x7f\x9a\xa8\xc5\x68\xa2\x63\x17\xa2\x76\xd5\xef\xe7\x46\x6a\xa0\xeb\xa5\x29\x5d\xf2\xe0\x77\x91\x72\x23\xf5\x14\xe1\x20\x1a\xea\xae\xd6\x63\xb2\xf4\xb5\x1e\x5a\x8a\xf1\xc3\x43\x36\xc7\xbd\xc8\xdf\x2a\x8c\x9f\x76\x71\x85\x8d\x01\x70\xf9\xfe\xbe\xd3\x5d\xe3\x6b\x0c\x73\xdf\x04\x0d\x3a\x37\x36\xa8\xdf\x00\x48\xe1\xcd\x4a\x08\x07\x69\xc2\x50\xa5\x73\xbe\x4f\x0e\x07\x35\x28\x11\xee\x20\x18\x7b\x6a\xa5\xf1\x51\x14\xc5\xe2\xd3\xaa\xa0\xd2\x58\xb0\x40\x1f\xfa\x02\x7a\x88\x52\xa5\x08\x8c\xb0\xb6\x80\x84\xd0\x95\x53\x8d\x78\x23\xfa\xed\x08\x8b\x34\x05\x9e\x30\x2a\x84\xb6\x40\x03\x97\xd0\xf0\xc2\x26\x59\x5d\x30\x3b\xa8\xad\xeb\x35\x97\xd1\xa7\x89\x46\x04\x53\x48\x1f\x8c\x8b\xea\x7e\xe5\x44\xc5\xbd\x4a\x14\x88\x0c\x14\xef\x10\x36\xa9\x24\x3b\x62\xd0\x62\x69\xc9\x55\xbd\xb7\x42\xbd\x22\x46\x0f\x22\xc7\xea\x55\xa0\x34\x78\xa7\xd2\x39\x98\x83\xf7\xae\x51\xaa\xd6\xb8\xb0\x0b\xca\x9b\x0b\xfd\xe6\xb2\x46\xf2\x0d\x7d\xe3\x11\xc1\x08\x34\x3e\x26\xfa\xb0\xf1\x1b\xd2\x91\xfb\xb8\x5b\xe1\xaa\x32\x95\x14\xea\xfa\xb9\xbb\x80\x3a\xe1\xc8\xfd\x29\xe2\x09\xa4\xdf\xd2\xbd\x45\xf9\x16\xaa\x34\xe5\x74\x14\xf2\xef\x0a\x1b\x3f\x38\xc4\x8f\x02\x4a\x49\x9d\xd0\x94\x72\x98\x96\xa2\xad\x3c\x34\xb2\xb1\x6f\x9d\x75\x50\x7d\xef\x14\x95\x3b\x44\x1d\x26\xc6\x54\x68\xfb\x13\xe0\x60\x5a\x28\xfb\x53\x3a\x54\x30\x55\x37\x3e\x88\x47\xf6\xda\xad\x5f\x2e\x0a\x2b\x86\xc1\x71\xc8\x4f\x40\x30\x83\x01\xf7\x71\x1a\xeb\x6c\x4a\xb1\xe5\xa0\xa2\x32\x44\x1a\x4e\x8e\x7d\xdd\x83\x02\x90\x63\x60\xe9\x58\x9b\x48\x8d\x9b\xcd\xab\x02\x73\xea\xb9\xb1\x0a\x50\x26\x18\x25\xc4\x21\xa0\x7f\xaf\x95\xa2\xa1\x15\xf8\x8b\x35\x5a\xa1\x5a\x79\x94\xe9\xb7\x0c\xf2\xa8\x62\xf7\x22\xa1\x5c\x25\x93\x6e\xed\xad\x3c\x4d\x1b\xaf\x72\xc0\x3a\x71\xb4\x36\xc2\xcd\x44\x9f\xaa\x68\x70\x1f\x44\x52\x65\x1a\x2e\x41\x3c\xd2\x6f\x01\xfb\x84\x60\x0c\xbc\x12\x01\x41\x0b\x55\xc1\xc0\xd6\xa0\xc0\xba\xdd\xa8\xcd\xbc\x7e\xdd\x6c\x5e\xec\x32\x36\x28\x15\x7c\xbb\x8a\x01\x8b\x42\x30\xb1\xdd\xc5\x42\x37\x36\x58\xb0\x8a\xca\xd9\x13\x7f\x57\x80\xf0\x0a\xb9\x06\x05\x21\x44\x9d\x17\x58\xf7\x16\xb7\x7e\xd8\x76\x41\xd6\x3c\x03\x9d\xcd\x38\x86\x08\xbe\xed\xf6\x41\xa9\xee\x86\x1e\x04\x7b\x58\x97\x9b\xb2\xb5\x20\xaa\x19\x16\xda\x06\xa5\x8d\x3d\xaa\x4f\xe9\x56\x90\x52\x96\x80\x9a\x13\x77\xac\xde\xef\x84\xc0\x5a\xd8\xbc\x99\x88\xa5\x5f\x78\xf5\x70\xc7\x0a\x77\x6c\x6b\x3c\xec\xec\xa8\x8e\xa6\xed\x30\x8d\xc1\xbc\x50\x57\x30\x21\x6d\xbd\x63\xde\x55\x93\x09\x7c\xcb\xd7\xed\xaa\x0c\x8a\x29\x28\x62\x8d\x85\x62\xbd\x65\x91\x82\xde\xd6\x3b\x56\xad\xa1\x02\x80\x01\xc2\x09\xe3\xcf\xe2\xa4\x08\x0b\xf0\x69\x55\x60\x29\x09\x12\x8e\x12\x6c\x36\x99\x87\x11\xd6\x60\x29\x2d\xe1\x16\x08\xc7\xb6\xbf\x4b\xa0\x60\xf2\x9b\x2b\xa3\xbd\xbb\xc2\xe8\x8b\x2f\xa8\x9b\xb5\x76\x66\xbb\xed\x02\xed\xba\xc5\x4c\xb0\xd1\x59\x34\x4c\x14\x27\x3c\xf4\xa1\xb0\x94\x01\x00\xc2\xe2\x5c\x24\xec\x4c\x02\x9d\xa1\x92\x8b\xc7\x4e\xe8\x37\xff\xde\xef\x7f\xfb\x6f\x27\xe0\xa1\xcd\xb5\x10\xc9\xb6\xdb\x9a\xb9\x9d\xe6\x73\xd1\xdc\x66\xdb\x9e\x4b\x92\x90\x47\xb2\x26\x13\x2c\x9b\x66\x40\xc0\x3d\xad\x9b\x75\xf7\x27\xb3\xd0\xd7\x40\x8d\xcd\x67\xb7\x64\x76\x74\x04\x42\x12\x50\xe4\xca\x15\x7a\x20\xa4\xae\xc8\xe2\xb5\x21\x00\x87\x25\x78\x6e\x42\x8f\xc9\x23\x2d\xad\x20\xd7\x54\x97\x2d\x61\xa8\xd4\x09\x92\x9e\x27\xb7\xa4\xe8\xf7\xf5\x30\xe8\x1b\xea\x31\xaf\x7e\x59\xce\xd3\xdb\xd3\x35\x6c\x2f\x55\xb8\x19\x91\xc4\x37\xc8\x04\xce\x1f\x27\x94\x3e\x0e\x8e\x61\xfd\xda\x10\xe1\x9b\xa2\xa8\xa7\x8e\xd1\xa5\x26\x36\x94\xb1\x83\xef\x09\x32\x1b\x40\x25\x48\x00\x78\x91\x04\x28\xaf\x2f\x49\xfb\xfd\xe4\x84\x3e\xfa\xcf\x13\x9a\xcf\x05\x94\x1a\x26\x9c\x0b\x10\x46\x0a\x95\x8c\x09\x70\xca\x0c\x97\xda\x0c\xdd\x01\x76\x27\x53\x3f\xa5\xcb\xfa\x13\x00\x80\x1b\x9c\x02\x5e\x7a\x1c\x6a\xa0\x56\x86\xae\x3c\x77\xf2\x29\x57\xc5\xa8\x13\x71\xa7\xe2\x65\x7a\x0f\x7e\xe3\xdc\x81\x07\x0c\x8e\x47\xe0\xec\x92\xdd\x43\x01\x08\xb4\x56\x8c\x38\x0f\xd1\x1f\xe0\x3a\x50\x48\x33\xb5\xbb\x60\x4b\x56\x30\x1e\xc3\x06\xb5\x40\x4d\x44\xd8\x54\x75\x58\xc6\x30\xc3\x3b\xd8\x46\x53\xc3\xff\xcb\x0a\x31\xc0\x63\x13\x47\x21\x3e\xa8\x4e\x20\x5b\x5e\x9d\xdd\x5c\xcc\xa6\x8b\x77\x67\x37\x3f\x2d\x2e\x2e\x2f\x27\x3f\x9e\x5d\x2e\xce\xae\xae\xce\xfe\x7b\x71\x31\x7d\x3b\xf9\xcd\x55\x82\xd1\x12\x24\xc2\x0f\xd3\x06\xd5\xa6\xe4\x78\xa4\xda\x12\x5a\x40\x9a\x3d\x17\xd2\x1b\xb2\x8f\xa2\xea\xf7\xd3\x13\x2b\x82\x2e\xc7\x37\x40\x4e\x09\x4c\xa7\xcb\xd4\x52\xe3\xfc\xf2\xfe\xfa\xc6\x99\xce\x6e\xf0\xc3\xc4\x3d\x08\x15\x10\x00\x90\x1d\x71\xcd\xab\x0a\x12\x0e\xb6\x99\x35\x5b\xa5\xea\x04\x5b\x66\x3b\xac\xfc\xfd\xec\xf2\xfd\x64\x31\x7b\x7f\xb3\x98\xfd\xb0\xf8\x7e\xf6\x7e\xfa\xf6\x7a\x97\x8b\x09\x8d\x5f\x51\xa6\xc1\xa2\x60\x81\xfd\xfe\xe0\xb8\x07\x9e\x5e\x23\xe4\x3f\x5d\x8c\xb2\x29\x4d\x1b\x3c\xfd\xe7\x31\x14\xc7\x68\x72\xad\xa1\x11\x0e\xfd\x89\xf0\xde\x1a\xcf\xea\x75\xe3\xe9\x2d\x7d\x6c\x08\x97\x10\x25\x83\xa7\xa8\xe0\xa0\x63\xcf\x2d\x21\x1b\xad\x98\xe2\x54\x87\x42\xe7\x0f\xb6\xee\x74\x01\x20\xbe\xda\x43\x96\xca\x1f\x8c\x37\x3b\x93\x76\x85\x2d\x95\x72\x6a\x93\xb6\x41\x14\xc2\x0d\x5a\xab\x16\x20\x6d\xb5\xf7\x6d\xe0\x6d\xc6\xfc\x3a\xee\xe8\x06\x3c\xec\x83\x63\xe7\xac\x89\x61\xa3\xb0\x0e\x59\xf5\xcd\xa9\xa7\xda\x0d\x24\xd5\x19\x03\x23\x08\xd4\xa4\xea\xd2\xbd\x8f\x07\x9b\x8d\x09\xe9\xf0\x94\x01\x68\xe9\xda\xcb\x0c\x52\x5c\xa4\xcf\xd4\xfc\x47\x56\x24\x1d\xcd\x83\xf5\x2c\xce\xa6\x8b\xd9\xf7\x3f\x03\x1e\x74\xe1\x6e\x8c\x62\x0a\x27\xaf\xe6\x0c\xc5\xff\xd2\xa9\x1f\x45\xfe\xd1\xc9\x4d\x26\xb5\x77\x00\x64\x41\x83\x13\x76\x55\xe9\x98\x9c\x86\x32\xb8\xfa\xe1\x7c\xf0\xb7\xff\x18\xbd\xe9\xdc\x3f\x7b\x07\x4e\x03\xe6\x87\xb5\x7b\x73\xf9\x1e\x40\x67\x3a\x1e\xbd\x44\x0b\x4e\xee\x53\x13\x39\xe6\x98\x7d\xaf\xdd\xbf\xd2\x73\x11\xf0\xa1\x1f\x22\xdb\xa0\xd1\x58\xe4\x6b\xfb\x0a\x16\x7c\x80\xa4\x65\x21\x1e\x5e\x24\x09\x27\xf7\x49\xca\xa1\x64\xc7\x08\xe3\x61\xc7\x2f\x8d\xa3\xbb\x4c\x99\xc7\x47\xbc\xfb\x23\xa8\x28\x71\x3e\xe2\xbd\x1f\x5b\x22\xf4\x3b\xe4\xff\x70\x35\xfb\x65\x71\x35\xf9\xaf\xf7\x17\x57\x93\x1d\xfa\x4d\x18\x31\xe4\x1b\xcf\x6a\x8d\xe0\xe7\x88\x16\x43\xb5\x71\xb3\x40\xc5\xc1\x17\x39\x51\xb3\x5f\xce\x0a\x90\xf1\x91\x38\x1f\xcd\xfd\x86\x29\xbc\xfb\x65\xa6\x74\xf8\xf9\xa7\x70\x25\x3c\xcb\xce\xbf\x9c\x9f\xf3\xb3\x29\x7a\x17\xd4\x5a\x37\x67\x17\xd3\x05\x04\xd5\xc9\x0f\x17\xd3\x2e\x7f\x85\xaf\xe2\x89\xe2\x51\x71\x80\x61\x27\xa2\xda\xdc\x5b\xb9\xbf\x06\x4e\x10\x46\xf7\x47\x23\x48\xd0\xe5\x11\x64\x6e\xf5\xd0\x65\xfc\x3c\xe2\x8a\x3b\x56\x40\x40\x7a\xc0\x28\xa0\x38\x6a\x68\x77\x22\xa9\xb2\x42\xc2\xca\xb4\x00\x4f\xc5\x9b\xf7\x3d\xc6\x30\x73\xf6\xb6\x26\xbf\x0e\xf9\x07\x94\xa2\xab\xa7\xd6\xc0\xe2\x9e\x35\x5a\x42\x1e\x35\x87\xd8\xb0\x78\x95\x5c\x24\xac\x43\x69\xa4\xe8\xc3\x2c\x27\x9b\x06\x2f\xfb\x04\x25\xda\x3e\xcd\xef\xa7\x57\x93\xeb\xd9\xe5\xdf\xcf\xbe\xbf\x9c\xec\x51\xfd\x39\x7f\xf7\x62\xfa\x2c\xf2\xb1\xa6\x9c\xe0\xa5\x63\xed\xf1\x44\xd9\x4f\xf3\xd5\x03\xf0\xa3\x01\x45\xcc\x9b\xc7\x00\xbe\x7c\x02\x69\xfc\x55\x5a\xe0\x96\x3c\xe0\xd1\xc3\xae\x91\xbe\xca\x3c\xde\xfd\xa5\xec\xab\x28\x71\x90\xfd\x3a\xd3\x44\xa6\x76\xd6\x8d\xe4\x9e\xaa\x08\x3a\xc4\xbc\xc3\x1e\x80\x53\x62\xb7\x15\xc0\x52\xfd\x03\x08\x30\x20\x8b\x1f\xae\xc1\x61\x27\xd3\xf3\x89\x4d\x22\x0a\x03\xb9\xca\xae\xa1\xd8\x6a\x7f\xb0\x51\x8f\x3a\x80\xa6\xcb\x35\xe6\x2a\x28\x2e\x5b\x35\x3e\xc0\xc8\xde\xa8\xf5\xd1\x5a\xd5\xd6\xaa\x85\x20\xdb\x2d\x84\x1d\x04\xaa\xbe\x50\xd7\xdf\x82\x84\xb2\x2b\xd1\xfe\xb8\x55\xd9\xda\x47\x84\x9a\x35\xa1\xfb\x43\xea\xd7\x08\xba\xd5\x1b\x4a\xfd\x51\x67\xb3\xf1\xca\x76\x47\xd8\x6c\x9c\xa9\x8c\x19\x20\x88\x38\x6d\x3d\x1f\xfc\x78\x35\xd7\x5f\xd1\x4d\xbe\x97\xbb\xc5\x26\x03\xa3\xe2\xb6\xc1\x60\x3f\xa9\xf3\xed\xd6\xc3\x8e\xf5\x33\xf8\xe4\xf8\xe0\xef\x10\x10\x32\x50\xcb\x38\xc0\x59\xfc\x4a\xa3\xdd\xeb\xf0\xfa\xfa\xa3\x3e\xbb\x35\x6b\x95\x73\x7e\xf9\xe1\x7b\x47\x37\xbf\xc3\xd8\x75\x08\xb5\x13\xed\x72\x6b\xf9\x29\x3c\x4e\xe6\xe2\x16\xd4\x8b\x0f\x6a\xbd\x89\x05\xbb\x3b\x3a\x6b\x30\x00\xb6\x16\x28\xcc\xa9\xdd\x4c\x68\xca\x70\xb9\xfe\x3e\x95\xaf\xff\x99\xc4\x7d\xf1\xc5\x18\xf0\xdb\x17\xf3\x5a\x86\x4c\xdb\x61\x23\x45\x7f\x4b\x90\x8c\x03\x4d\x2a\x3d\x4f\x51\xea\xf8\x49\xee\x35\xad\xdb\x8e\x10\x23\xa3\xf6\xd1\x9f\x55\x7f\x6b\xe3\xb1\xff\xff\x30\x80\x55\x80\xff\xb4\xbc\x57\x01\xfe\xd3\x22\x58\xa9\x5f\x35\x68\x06\x57\x01\xfe\xc3\x10\xb8\xc3\x88\xff\x9c\x07\x9a\xc8\x96\x93\x03\x76\xef\x42\xe2\x86\xab\xe6\xf1\x90\xd3\x78\x3b\x44\x22\x86\x6e\xfa\x0b\xfb\xd2\x68\x95\xfc\xaf\xb8\xe2\xea\x00\x85\x84\x75\x0f\xde\x15\x5c\x2d\x36\x2c\xf7\x5f\xb2\x6e\x7c\xd2\xd6\x2d\x3f\x6b\x64\x0d\x53\xd6\xce\x5e\x15\xfe\x01\x4a\x76\x22\xab\xf4\x21\xb7\xec\x8e\xbd\x62\x99\x5d\xbb\x04\xa3\xcc\xa8\xfa\x7d\x51\x90\x96\xea\xff\x69\xe7\xed\xe0\x0f\x0c\x54\x48\x83\x84\x67\x9a\x52\x4d\x05\x64\x22\xb7\xfa\xd1\x10\x86\x58\x5a\x90\xea\xf0\x07\x51\x66\xaa\x1e\x81\x75\x8f\xec\x34\x7f\xb5\xf1\x9b\x66\xa3\xed\x55\x62\xea\xb4\xbf\x61\x53\x75\x26\x1c\xad\x5b\x9a\x36\x5b\x52\xa1\x07\x64\xc1\x18\x4d\x6d\x89\x57\x37\x12\xe1\x3e\xe9\x13\xb6\xf5\x3a\x6d\x3c\x6c\x48\xfe\x5c\x0a\xae\x32\x9f\x6e\xec\x55\xd8\xa3\xac\x9f\xea\xd4\x43\xd3\xe6\x8d\xd1\xc8\xdf\x7a\xf5\x6f\x04\x20\x91\xd4\xcf\xf4\x19\xbf\xda\xb5\x3a\x7b\x4d\xf1\xa0\x9b\xa0\xf8\x33\x3f\xfd\x64\x44\xb4\xf3\x53\x03\x62\x67\xeb\xbb\x9a\x05\x76\x68\x77\x0d\x50\xb7\xb7\x48\x14\xf5\xaa\x1d\x06\x9b\xa5\xdd\x89\x7a\xfd\xee\x32\x2d\xa9\xf0\xab\xff\x0b\x00\x00\xff\xff\x2c\x9c\xc6\x98\x86\x2a\x00\x00")

func distVeloxMinJsBytes() ([]byte, error) {
	return bindataRead(
		_distVeloxMinJs,
		"dist/velox.min.js",
	)
}

func distVeloxMinJs() (*asset, error) {
	bytes, err := distVeloxMinJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dist/velox.min.js", size: 10886, mode: os.FileMode(420), modTime: time.Unix(1456103678, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"dist/velox.min.js": distVeloxMinJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"dist": &bintree{nil, map[string]*bintree{
		"velox.min.js": &bintree{distVeloxMinJs, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

